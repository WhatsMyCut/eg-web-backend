{"version":3,"sources":["consts.js","Apollo.js","constants/responsive.js","constants/layout.js","components/LoginComponent/styles.js","graphql/mutations/login_mutation.js","hoc/graphql.js","constants/colors.js","components/LoginComponent/index.js","layout/loginLayout.js","graphql/queries/get_current_user.js","components/404.js","components/HomeComponent/index.js","components/NavigationComponent/styles.js","components/NavigationComponent/index.js","components/shared/Icon/index.js","components/shared/Modals/Modal.js","components/shared/HeaderWithAddBtn.js","components/shared/ManagementView.js","lib/Lib.js","components/shared/Table.js","components/shared/Inputs/EGTextBox.js","components/shared/Inputs/EGTextArea.js","components/shared/Inputs/EGCheckbox.js","components/shared/Inputs/EGDropdown.js","graphql/mutations/createAction_mutation.js","graphql/mutations/updateAction_mutation.js","components/ActionsComponent/ActionModal.js","graphql/mutations/createCategory_mutation.js","graphql/mutations/updateCategory_mutation.js","components/ActionsComponent/CategoryModal.js","graphql/queries/allActions.js","components/ActionsComponent/index.js","components/shared/Inputs/EGQuill.js","graphql/mutations/createPetition_mutation.js","graphql/mutations/updatePetition_mutation.js","components/PetitionsComponent/PetitionModal.js","graphql/queries/allPetitions.js","components/PetitionsComponent/index.js","graphql/mutations/createUser_mutation.js","graphql/mutations/updateUser_mutation.js","components/UsersComponent/UserModal.js","graphql/queries/allUsers.js","graphql/queries/allRoles.js","components/UsersComponent/index.js","layout/mainLayout.js","hoc/withUser.js","routes/main.js","App.js","registerServiceWorker.js","index.js"],"names":["AUTH_TOKEN_NAME","require","config","httpLink","HttpLink","uri","retryLink","RetryLink","delay","initial","max","Infinity","jitter","attempts","retryIf","error","_ref","query","getMainDefinition","operation","errorLink","onError","_ref2","graphQLErrors","networkError","map","_ref3","message","locations","path","console","log","JSON","stringify","concat","authLink","setContext","_","context","headers","token","localStorage","getItem","Object","objectSpread","authorization","Apollo","ApolloClient","ssrForceFetchDelay","link","ApolloLink","from","connectToDevTools","cache","InMemoryCache","responsiveSizes","mobileS","mobileM","mobileL","phablet","tablet","laptop","laptopL","desktop","_mediaQueryGenerator","sizes","type","keys","reduce","acc","label","css","_templateObject","apply","arguments","maxWidthMediaQuery","layout","styles","linkText","lineHeight","display","fontStyle","cursor","fontFamily","LoginMutation","gql","login_mutation_templateObject","refetches","graphql","document","operationOptions","length","undefined","_getMainDefinition","kind","name","Component","_class","_class2","_temp","_dec","_React$Component","MyGraphQL","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","fetching","_refetch","start","Date","setState","Promise","all","refetch","then","catch","diff","window","setTimeout","Math","inherits","createClass","key","value","_addRefetch","props","nextProps","_removeRefetch","data","push","index","indexOf","splice","_renderError","react_default","a","createElement","style","textAlign","Message","negative","compact","Button","primary","fluid","loading","disabled","onClick","Icon","size","React","displayName","colors","LoginContainer","styled","div","LoginComponent_templateObject","LoginMenu","_templateObject2","TextHeader","h2","_templateObject3","LoginForm","_templateObject4","InputContainer","_templateObject5","Input","_templateObject6","LoginButton","_templateObject7","Login","withRouter","handleInputChange","event","target","username","password","toggleRememberMe","rememberMe","handleLogin","_this$props","history","login","variables","res","setItem","err","errmsg","_this$state","placeholder","onChange","flexDirection","alignItems","commonjs","id","checked","paddingTop","paddingBottom","color","fontSize","marginLeft","LoginLayoutContainer","loginLayout_templateObject","LoginLayout","routes","Route","exact","component","GET_CURRENT_USER_QUERY","get_current_user_templateObject","PageNotFound","Container","Header","as","HomeContainer","HomeComponent_templateObject","Home","count","HomeComponent_DropdownSection","text","drop","backgroundImage","_this2","interval","setInterval","clearInterval","DropdownSection","componentClasses","NavLink","className","join","to","fontWeight","navbar","height","backgroundColor","width","position","left","top","bottom","justifyContent","zIndex","navbarIcon","navbarLink","navbarText","navbarMenu","subNav","subNavIcon","verticalAlign","marginRight","subMenu","boxShadow","border","activeSubMenu","AccountCircleMenuItem","trigger","Item","options","icon","removeItem","Dropdown","pointing","NavigationComponent_templateObject","NavBar","Menu","borderless","location","pathname","MaterialIcon","_ref$size","outline","rest","objectWithoutProperties","sizeClass","tiny","small","medium","large","assign","EGModal","_onClose","onClose","entityType","modalContent","entity","Modal","open","closeIcon","content","Content","Actions","_saveMutation","newValue","save","HeaderContainer","HeaderWithAddBtn_templateObject","AddBtnContainer","HeaderWithAddBtn_templateObject2","HeaderWithAddBtn","getTitleText","title","clickable","_this$props2","openModal","margin","PageContainer","ManagementView_templateObject","ContentContainer","ManagementView_templateObject2","ManagementView_templateObject3","ManagementView_templateObject4","ManagementView","children","HeaderWithAddBtn_HeaderWithAddBtn","lib","formatTime","date","toString","substring","yy","getFullYear","MM","getMonth","dd","getDate","hh","getHours","tt","mm","getMinutes","arrayIncludes","array","isArray","some","arrayValue","trueFalseToYesNo","truncateText","Table","SUITable","Table_templateObject","collapsable","Table_templateObject2","cellHeaderTitles","i","EGTable","handleHyperlinkClick","rowItem","columnIndex","hyperlinkFunction","getColumnFunction","hyperlinkFunctions","getContent","fieldName","hyperlinkColumns","getText","formatFunction","replace","formatColumns","formatFunctions","handlerObjects","cellIndex","handlerObj","filter","cellObj","fn","headings","leftAlignColumns","editable","edit","container","Table_Table","celled","unstackable","Row","heading","HeaderCell","Body","rowIndex","Cell","ID","header","letterSpacing","EGTextBox","marginBottom","EGTextArea","textArea","flex","borderLeftColor","borderBottomRightRadius","borderTopRightRadius","paddingRight","paddingLeft","EGCheckbox","EGDropdown","convertToUsableObject","currentValues","addingOption","handleChange","e","optionAdditionCheck","multiple","valueChange","getValueChange","action","search","selection","dropdown","values","array1","array2","CreateActionMutation","createAction_mutation_templateObject","UpdateActionMutation","updateAction_mutation_templateObject","ActionModal","initialRelatedActionIds","related_actions","createAction","updateAction","water","parseFloat","waste","carbon_dioxide","points","parseInt","order","selectedIds","relatedActionIdsToRemove","initialActionId","actionId","relatedActionIds","relatedActionsOptions","Inputs_EGTextArea","short_description","updateEntity","Inputs_EGTextBox","Inputs_EGDropdown","schedule","scheduleOptions","updateSchedule","primary_image","video_url","external_url","toDropdownOptions","updateRelatedActions","Inputs_EGCheckbox","isGame","updateEntityBoolean","active","author","createdAt","updatedAt","propName","newEntity","selectedAction","actionIndex","list","textProp","item","_this$props3","Modals_Modal","CreateCategoryMutation","createCategory_mutation_templateObject","UpdateCategoryMutation","updateCategory_mutation_templateObject","CategoryModal","createCategory","updateCategory","video_id","actions","GET_ALL_ACTIONS_CATEGORIES","allActions_templateObject","category","action_taken_description","modal","modalOpen","cat","category_id","selectedCategory","_onCloseModal","all_actions_by_category","getTable","isGameView","shared_Table","Id","Category","Order","PrimaryImage","Active","ShortDescription","ActionTakenDescription","Schedule","VideoURL","CarbonDioxide","Water","Waste","ExternalURL","IsGame","Author","CreatedAt","UpdatedAt","RelatedActions","act","match","user","Segment","ManagementView_ManagementView","overflowY","actionCategories","author_id","me","_renderModal","ActionsComponent_CategoryModal","ActionsComponent_ActionModal","relatedActionsoptions","EGQuill","react_quill_lib_default","quill","CreatePetitionMutation","createPetition_mutation_templateObject","UpdatePetitionMutation","updatePetition_mutation_templateObject","PetitionModal","createPetition","updatePetition","Inputs_EGQuill","body","users","GET_ALL_PETITIONS","allPetitions_templateObject","petition","Petitions","all_petitions","petitions","Title","Users","PetitionsComponent_PetitionModal","CreateUserMutation","createUser_mutation_templateObject","UpdateUserMutation","updateUser_mutation_templateObject","UserModal","createUser","updateUser","roles","role_id","role","email","phone","updateRole","total_points","role_name","GET_ALL_USERS","allUsers_templateObject","GET_ALL_ROLES","allRoles_templateObject","recent_actions","petitions_signed","all_users","all_roles","Email","Password","Name","Phone","Role","RecentActions","TotalPoints","PetitionsSigned","UsersComponent_UserModal","withUser","WithUser","redirect","Redirect","overflow","Switch","render","HomeComponent","LoginComponent","ActionsComponent","PetitionsComponent","UsersComponent","Routes","BrowserRouter","MainLayout","App","main_Routes","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Application","react_apollo_browser_umd","client","src_App_0","ReactDOM","getElementById","URL","process","origin","addEventListener","fetch","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gYAAaA,UAAkB,wBCY/BC,EAAQ,KAAUC,OAAO,cAEzB,IAAMC,EAAW,IAAIC,IAAS,CAC5BC,IAAK,yCAGDC,EAAY,IAAIC,IAAU,CAC9BC,MAAO,CACLC,QAAS,IACTC,IAAKC,IACLC,QAAQ,GAEVC,SAAU,CACRH,IAAK,EACLI,QAAS,SAACC,EAADC,GAAsB,IAAZC,EAAYD,EAAZC,MAEjB,MAAqB,UADCC,YAAkBD,GAAhCE,cAeRC,EAAYC,YAAQ,SAAAC,GAAgD,IAA7CC,EAA6CD,EAA7CC,cAAeC,EAA8BF,EAA9BE,aAA8BF,EAAhBH,UACpDI,GACFA,EAAcE,IAAI,SAAAC,GAAkC,IAA/BC,EAA+BD,EAA/BC,QAASC,EAAsBF,EAAtBE,UAAWC,EAAWH,EAAXG,KAKvC,OAJAC,QAAQC,IACN,kBACAC,KAAKC,UAAU,CAAEN,UAASC,YAAWC,UAEhCF,IAIPH,GACFM,QAAQC,IAAR,kBAAAG,OAA8BV,MAO5BW,EAAWC,YAAW,SAACC,EAAGC,GAAY,IAClCC,EAAYD,EAAZC,QACFC,EAAQC,aAAaC,QAAQ1C,GACnC,OAAO2C,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEC,QAAQI,OAAAC,EAAA,EAAAD,CAAA,GACHJ,EADE,CAELM,cAAa,UAAAX,OAAYM,SAKhBM,EAAA,IAAIC,IAAa,CAC9BC,mBAAoB,IACpBC,KAAMC,IAAWC,KAAK,CAAChB,EAAUf,EAAWd,EAAWH,IACvDiD,mBAAmB,EACnBC,MAAO,IAAIC,uOC1EN,IAAMC,EAAkB,CAC7BC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,QAAS,QACTC,OAAQ,QACRC,OAAQ,SACRC,QAAS,SACTC,QAAS,UAGLC,EAAuB,SAACC,EAAOC,GACnC,OAAOvB,OAAOwB,KAAKF,GAAOG,OAAO,SAACC,EAAKC,GAOrC,OANAD,EAAIC,GAAS,kBAAaC,YAAbC,IACDN,EAASD,EAAMK,GACrBC,IAAGE,WAAH,EAAAC,aAICL,GACN,KAKQM,GADqBX,EAAqBT,EAAiB,aACtCS,EAAqBT,EAAiB,cC5B3DqB,EACG,2FCGHC,EAAS,CAClBC,SAAU,CACNC,WAAY,IACZC,QAAS,QACTC,UAAW,SACXC,OAAQ,UACRC,WAAYP,uRCRb,MAAMQ,EAAgBC,IAAHC,gCCGpBC,EAAY,GAElBC,EAAA,SAAwBC,GAAiC,IAAvBC,EAAuBhB,UAAAiB,OAAA,QAAAC,IAAAlB,UAAA,GAAAA,UAAA,GAAJ,GAAImB,EAC3B3E,YAAkBuE,GAAtCK,EAD+CD,EAC/CC,KAAM3E,EADyC0E,EACzC1E,UAEd,GAAa,wBAAT2E,GAAgD,UAAd3E,EACpC,OAAOqE,kBAAQC,EAAUC,GAG3B,IAAMK,EAAOL,EAAiBK,MAAQ,OAEtC,OAAO,SAA0BC,GAAW,IAAAC,EAAAC,EAAAC,EA8F1C,OA7FCX,kBAAQC,EAAUC,EADuBU,EAAAD,EAAAD,EAAA,SAAAG,GAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAA7D,OAAA8D,EAAA,EAAA9D,CAAA+D,KAAAJ,GAAA,QAAAK,EAAAjC,UAAAiB,OAAAiB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAApC,UAAAoC,GAAA,OAAAN,EAAA7D,OAAAoE,EAAA,EAAApE,CAAA+D,MAAAH,EAAA5D,OAAAqE,EAAA,EAAArE,CAAA2D,IAAAW,KAAAxC,MAAA8B,EAAA,CAAAG,MAAAxE,OAAA0E,MAMxCM,MAAQ,CACNC,UAAU,GAP4BX,EA6ExCY,SAAW,WACT,IAAMC,EAAQ,IAAIC,KAClBd,EAAKe,SAAS,CAAEJ,UAAU,IAC1BK,QAAQC,IAAIlC,EAAU9D,IAAI,SAAAiG,GAAO,OAAIA,OAClCC,KAAK,WACJnB,EAAKe,SAAS,CAAEJ,UAAU,MAE3BS,MAAM,WACL,IACMC,EADM,IAAIP,KACGD,EACnBS,OAAOC,WAAW,WAChBvB,EAAKe,SAAS,CAAEJ,UAAU,KACzBa,KAAKtH,IAAI,EAAG,IAAMmH,OAzFarB,EAAA,OAAA7D,OAAAsF,EAAA,EAAAtF,CAAA2D,EAAAD,GAAA1D,OAAAuF,EAAA,EAAAvF,CAAA2D,EAAA,EAAA6B,IAAA,qBAAAC,MAAA,WAWtC1B,KAAK2B,YAAY3B,KAAK4B,SAXgB,CAAAH,IAAA,sBAAAC,MAAA,SAcpBG,GAClB7B,KAAK8B,eAAe9B,KAAK4B,OACzB5B,KAAK2B,YAAYE,KAhBqB,CAAAJ,IAAA,uBAAAC,MAAA,WAoBtC1B,KAAK8B,eAAe9B,KAAK4B,SApBa,CAAAH,IAAA,cAAAC,MAAA,SAuB5BE,GACV,IAAMG,EAAOH,EAAMvC,GAEd0C,GAILlD,EAAUmD,KAAKD,EAAKf,WA9BkB,CAAAS,IAAA,iBAAAC,MAAA,SAiCzBE,GACb,IAAMG,EAAOH,EAAMvC,GAEnB,GAAK0C,EAAL,CAIA,IAAME,EAAQpD,EAAUqD,QAAQH,EAAKf,SACjCiB,GAAS,GACXpD,EAAUsD,OAAOF,EAAO,MA1CY,CAAAR,IAAA,SAAAC,MAAA,WA+CtC,IAAMK,EAAO/B,KAAK4B,MAAMvC,GAExB,OAAI0C,GAAQA,EAAK1H,MACR2F,KAAKoC,aAAaL,EAAK1H,OAGzBgI,EAAAC,EAAAC,cAACjD,EAAcU,KAAK4B,SArDW,CAAAH,IAAA,eAAAC,MAAA,SAwD3BrH,GAAO,IACVoG,EAAaT,KAAKQ,MAAlBC,SAER,OACE4B,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,WACvBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,UAAQ,EAACC,SAAO,GACvBP,EAAAC,EAAAC,cAAA,SAAIlI,EAAMY,SACVoH,EAAAC,EAAAC,cAACM,EAAA,EAAD,CACEC,SAAO,EACPC,OAAK,EACLC,QAASvC,EACTwC,SAAUxC,EACVyC,QAASlD,KAAKU,UAEd2B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAM9D,KAAK,UAAU+D,KAAK,UAP5B,eA/DgCxD,EAAA,CAElByD,IAAM/D,WAFYE,EAGjC8D,YAHiC,aAAA9H,OAGN8D,EAAUgE,aAC1ChE,EAAUD,KAJ4B,KAAAE,EAAAE,KAAAF,IChBjCgE,EAEC,UAFDA,EAGE,UAHFA,EAIC,+hBCed,IAAMC,GAAiBC,IAAOC,IAAVC,MAIdC,GAAYH,IAAOC,IAAVG,MAIfD,GAAUE,WAAaL,IAAOM,GAA9BC,MAIAJ,GAAUK,UAAYR,IAAOC,IAA7BQ,UAIQD,GAAcL,GAAdK,UAERA,GAAUE,eAAiBV,IAAOC,IAAlCU,MAIAH,GAAUI,MAAQZ,YAAOY,QAAPZ,CAAlBa,MAIAL,GAAUM,YAAcd,YAAOZ,SAAPY,CAAxBe,UAuHeC,GAnHd3F,EAAQJ,EAAe,CACtBW,KAAM,YAEPqF,0BAMA,SAAAD,EAAY7C,GAAO,IAAA9B,EAAA,OAAA7D,OAAA8D,EAAA,EAAA9D,CAAA+D,KAAAyE,IAClB3E,EAAA7D,OAAAoE,EAAA,EAAApE,CAAA+D,KAAA/D,OAAAqE,EAAA,EAAArE,CAAAwI,GAAAlE,KAAAP,KAAM4B,KAuDP+C,kBAAoB,SAAAC,GACO,aAAtBA,EAAMC,OAAOxF,KACfS,EAAKe,SAAS,CACfiE,SAAUF,EAAMC,OAAOnD,QAGtB5B,EAAKe,SAAS,CACfkE,SAAUH,EAAMC,OAAOnD,SA/DN5B,EAqEjBkF,iBAAmB,WACpBlF,EAAKe,SAAS,CACZoE,YAAanF,EAAKU,MAAMyE,cAvERnF,EA2EjBoF,YAAc,WAAM,IAAAC,EACMrF,EAAK8B,MAAxBwD,EADaD,EACbC,QAASC,EADIF,EACJE,MACTrC,EAAYlD,EAAKU,MAAjBwC,QACRlD,EAAKe,SAAS,CAAEmC,SAAUA,IAK1BqC,EAAM,CAAEC,UAJU,CAChBR,SAAUhF,EAAKU,MAAMsE,SACrBC,SAAUjF,EAAKU,MAAMuE,YAGpB9D,KAAK,SAAAsE,GACP,GAAIA,EAAIxD,KAAKsD,MAAMvJ,MAAO,CACxB,IAAIA,EAAQyJ,EAAIxD,KAAKsD,MAAMvJ,MAC3BC,aAAayJ,QAAQlM,EAAiBwC,GACtCsJ,EAAQpD,KAAK,cAGb5G,QAAQf,MAAM,mCACdyF,EAAKe,SAAS,CAAEmC,SAAS,MAGzB9B,MAAM,SAAAuE,GACRrK,QAAQf,MAAM,kCAAmCiB,KAAKC,UAAUkK,IAChE,IAAIC,EACFD,EAAI5K,cAAcoE,OAAS,EAC1BwG,EAAI5K,cAAc,GAAGI,QACrB,+CACH6E,EAAKe,SAAS,CAAEmC,SAAS,EAAO3I,MAAOqL,OAnGxC5F,EAAKU,MAAQ,CACbsE,SAAU,GACVC,SAAU,GACVE,YAAY,EACZjC,SAAS,EACT3I,MAAO,MAPWyF,wEAUV,IAAA6F,EACmB3F,KAAKQ,MAAxBwC,EADA2C,EACA3C,QADA2C,EACStL,MACjB,OACAgI,EAAAC,EAAAC,cAACiB,GAAD,KACCnB,EAAAC,EAAAC,cAACqB,GAAUK,UAAX,KACC5B,EAAAC,EAAAC,cAACqB,GAAUE,WAAX,8CAGAzB,EAAAC,EAAAC,cAAC0B,GAAUE,eAAX,KACC9B,EAAAC,EAAAC,cAAC0B,GAAUI,MAAX,CACA7G,KAAK,WACL6B,KAAK,WACLuG,YAAY,WACZlE,MAAO1B,KAAKQ,MAAMsE,SAClBe,SAAU7F,KAAK2E,oBAEftC,EAAAC,EAAAC,cAAC0B,GAAUI,MAAX,CACA7G,KAAK,WACL6B,KAAK,WACLuG,YAAY,WACZlE,MAAO1B,KAAKQ,MAAMuE,SAClBc,SAAU7F,KAAK2E,qBAGhBtC,EAAAC,EAAAC,cAAC0B,GAAUM,YAAX,CAAuBvB,QAASA,EAASE,QAASlD,KAAKkF,aAAvD,UAIA7C,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAClE,QAAS,OAAQwH,cAAe,MAAOC,WAAY,WAC/D1D,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CACCxI,KAAK,WACLyI,GAAG,aACHC,QAASlG,KAAKQ,MAAMyE,WACpBY,SAAU7F,KAAKgF,iBACfxC,MAAO,CAAE2D,WAAY,MAAOC,cAAe,OAAQ3H,WAAYP,KAEhEmE,EAAAC,EAAAC,cAAA,SAAOC,MAAO,CAAC6D,MAAO,QAASC,SAAU,OAAQ7H,WAAY,UAAW8H,WAAY,QAApF,gBAEDlE,EAAAC,EAAAC,cAAA,KAAGC,MAAOrE,EAAOC,UAAjB,yBACAiE,EAAAC,EAAAC,cAAA,KAAGC,MAAOrE,EAAOC,UAAjB,uCAtDgBkB,iIChDpB,IAAMkH,GAAuB/C,IAAOC,IAAV+C,MAWXC,GANK,SAAApM,KAAGqM,OAAH,OAClBtE,EAAAC,EAAAC,cAACiE,GAAD,KACEnE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,SAAU2L,UAAWrC,qLCVrC,IAAMsC,GAAyBpI,IAAHqI,iCCWpBC,GATM,WACnB,OACE5E,EAAAC,EAAAC,cAAC2E,GAAA,EAAD,CAAWzE,UAAU,SAASD,MAAO,CAAE2D,WAAY,QACjD9D,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAQC,GAAG,MAAX,kBACA/E,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAQC,GAAG,MAAX,wPCFN,IAAMC,GAAgB5D,IAAOC,IAAV4D,MAeDC,GAAjB7C,0NACClE,MAAQ,CACNgH,MAAO,2EAGD,IACCA,EAASxH,KAAKQ,MAAdgH,MACP,OACEnF,EAAAC,EAAAC,cAAC8E,GAAD,KACEhF,EAAAC,EAAAC,cAACkF,GAAD,CAAiBC,KAAK,UAAUC,KAAMH,GAAS,EAAGI,gBAAgB,uEAAuEzM,KAAK,aAC9IkH,EAAAC,EAAAC,cAACkF,GAAD,CAAiBC,KAAK,QAAQC,KAAMH,GAAS,EAAGI,gBAAgB,gEAAgEzM,KAAK,WACrIkH,EAAAC,EAAAC,cAACkF,GAAD,CAAiBC,KAAK,YAAYC,KAAMH,GAAS,EAAGI,gBAAgB,2DAA2DzM,KAAK,eACpIkH,EAAAC,EAAAC,cAACkF,GAAD,CAAiBC,KAAK,QAAQC,KAAMH,GAAS,EAAGI,gBAAgB,2EAA2EzM,KAAK,wDAKnI,IAAA0M,EAAA7H,KACbwH,EAAQ,EACRM,EAAWC,YAAY,WACtBP,GAAS,GACVK,EAAKhH,SAAS,CACZ2G,UAEFA,KAEAQ,cAAcF,IAEf,YA5BwBxI,kBAgCzB2I,GAAkB,SAAArG,GACtB,IAAMsG,EAAmB,CAAC,sBAE1B,OADkB,IAAftG,EAAM+F,MAAeO,EAAiBlG,KAAK,QAE5CK,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAASC,UAAWF,EAAiBG,KAAK,KAAM7F,MAAO,CAACoF,gBAAiB,OAAApM,OAAOoG,EAAMgG,kBAAqB,GAAIvB,MAAO,SAAUiC,GAAI1G,EAAMzG,MACxIkH,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAC8D,SAAU,MAAOiC,WAAY,IAAKjK,SAAwB,IAAfsD,EAAM+F,KAAgB,QAAU,SAAU/F,EAAM8F,QAK/FH,0BC7DFpJ,GAAS,CACpBqK,OAAQ,CACNC,OAAQ,MACRC,gBAAiBnF,EACjBoF,MAAO,QACPC,SAAU,QACVC,KAAM,EACNC,IAAK,EACLC,OAAQ,EACRzK,QAAS,OACTwH,cAAe,SACfC,WAAY,UACZiD,eAAgB,gBAChBC,OAAQ,KAGVC,WAAY,CACV7C,MAAO9C,GAGT4F,WAAY,CACV7K,QAAS,OACTwH,cAAe,SACfkD,eAAgB,SAChBjD,WAAY,UAGdqD,WAAY,CACV/C,MAAO9C,EACP4C,WAAY,UACZC,cAAe,WASjBiD,WAAY,CACVZ,OAAQ,OACRC,gBAAiBnF,EACjBjF,QAAS,OACTwH,cAAe,MACfkD,eAAgB,aAChBjD,WAAY,UAGduD,OAAQ,CACNT,KAAM,WACNH,gBAAiB,WAGnBa,WAAY,CACVC,cAAe,SACfC,YAAa,YAGfC,QAAS,CACPhB,gBAAiB,UACjBiB,UAAW,OACXC,OAAQ,QAGVC,cAAe,CACbnB,gBAAiB,kKClDrB,SAASoB,GAATxP,GAAkDA,EAAjB+E,KAAiB,IAAX+F,EAAW9K,EAAX8K,QAC/B2E,EACJ1H,EAAAC,EAAAC,cAACyH,GAAD,CAAM5B,UAAU,QACZ/F,EAAAC,EAAAC,cAAA,qBAIA0H,EAAU,CACd,CACExI,IAAK,WACLiG,KAAM,WACNwC,KAAM,WACNhH,QAAS,WACPnH,aAAaoO,WAAW7Q,GACxB8L,EAAQpD,KAAK,aAanB,OACEK,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CACEL,QAASA,EACTE,QAASA,EACTI,SAAS,QACTH,KAAM,KACN1H,MAAO,CAAClE,QAAS,OAAQwH,cAAe,SAAUkD,eAAgB,YAKxE,IAAMgB,GAAOvG,IAAOC,IAAV4G,KACA/G,GAKK,SAASgH,GAAO3I,GAG7B,OAAOS,EAAAC,EAAAC,cAAA,OAAKC,MAAOrE,GAAOqK,QACtBnG,EAAAC,EAAAC,cAACiI,GAAA,EAAD,CAAMC,YAAU,EAAC1H,OAAK,EAACP,MAAOrE,GAAOkL,YAEnChH,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAASG,GAAG,QAAQ9F,MAAOrE,GAAOgL,YAChC9G,EAAAC,EAAAC,cAAA,OAAK6F,UAAU,OAAO5F,MAAOrE,GAAOiL,YAApC,aAIF/G,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEmG,MAAO,OAAQF,OAAQ,OAAQnK,QAAS,OAAQwH,cAAe,MAAOkD,eAAgB,aAClG3G,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAASG,GAAG,WAAW9F,MAAKvG,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,GAAOgL,WAAe,CAAE7K,QAAqC,UAA5BsD,EAAM8I,SAASC,SAAuB,OAAS,UACjHtI,EAAAC,EAAAC,cAACyH,GAAD,CAAM5B,UAAU,QACd/F,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAASG,GAAG,SAAS9F,MAAKvG,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,GAAOgL,WAAe,CAAE7K,QAAqC,UAA5BsD,EAAM8I,SAASC,SAAuB,OAAS,UAC/GtI,EAAAC,EAAAC,cAACyH,GAAD,CAAM5B,UAAU,QACd/F,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAASG,GAAG,aAAa9F,MAAKvG,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,GAAOgL,WAAe,CAAE7K,QAAqC,UAA5BsD,EAAM8I,SAASC,SAAuB,OAAS,UAC3HtI,EAAAC,EAAAC,cAACyH,GAAD,CAAM5B,UAAU,QACN/F,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAC4F,GAAA,EAAD,CAASG,GAAG,SAAS9F,MAAKvG,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,GAAOgL,WAAe,CAAE7K,QAAqC,UAA5BsD,EAAM8I,SAASC,SAAuB,OAAS,UACvHtI,EAAAC,EAAAC,cAACyH,GAAD,CAAM5B,UAAU,QACN/F,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAACuH,GAAD,CAAuBzK,KAAK,UAAU+F,QAASxD,EAAMwD,QAAS5C,MAAO,CAAEiG,OAAQ,kCC1F1E,SAASmC,GAATtQ,GAKZ,IAAAuQ,EAAAvQ,EAJD8I,YAIC,IAAAyH,EAJM,QAINA,EAHDxL,EAGC/E,EAHD+E,KACAyL,EAECxQ,EAFDwQ,QACGC,EACF9O,OAAA+O,GAAA,EAAA/O,CAAA3B,EAAA,2BAOK2Q,EANQ,CACZC,KAAM,QACNC,MAAO,QACPC,OAAQ,QACRC,MAAO,SAEejI,GAmBxB,OAfI0H,EAEAzI,EAAAC,EAAAC,cAAA,IAAAtG,OAAAqP,OAAA,CACElD,UAAS,WAAA5M,OAAa6D,EAAb,oCAAA7D,OAAoDyP,IACzDF,IAKN1I,EAAAC,EAAAC,cAAA,IAAAtG,OAAAqP,OAAA,CAAGlD,UAAS,kBAAA5M,OAAoByP,IAAiBF,GAC9C1L,iBC6BMkM,8MAjDb/K,MAAQ,CACNwC,SAAS,EACTtB,MAAO,MAuCT8J,SAAW,WAAM,IACPC,EAAY3L,EAAK8B,MAAjB6J,QACJA,GACFA,6EAvCK,IAAA5D,EAAA7H,KAAAmF,GACWnF,KAAKQ,MAAfkB,MACqC1B,KAAK4B,OAA1C8J,EAFDvG,EAECuG,WAAoBC,GAFrBxG,EAEayG,OAFbzG,EAEqBwG,cAC5B,OAAOtJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAD,CAAOC,MAAI,EAACC,WAAS,EAACN,QAASzL,KAAKwL,UACvCnJ,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAQ+C,KAAK,UAAU8B,QAAO,YAAAxQ,OAAckQ,KAC5CrJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAMI,QAAP,KACKN,GAELtJ,EAAAC,EAAAC,cAACsJ,GAAA,EAAMK,QAAP,KACE7J,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQwD,MAAM,MAAMnD,QAASlD,KAAKwL,UAChCnJ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAM9D,KAAK,WADb,WAGAgD,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQwD,MAAM,QAAQnD,QAAS,WAC3B2E,EAAKsE,kBAEP9J,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAM9D,KAAK,WAHb,iDASM+M,GAAU,IACdC,EAASrM,KAAK4B,MAAdyK,KACRrM,KAAKa,SAAS,CAAEmC,SAAS,IAUzBqJ,WAvCkB/M,+XCHtB,IAAMgN,GAAkB7I,IAAOC,IAAV6I,MAQfC,GAAkB/I,IAAOC,IAAV+I,MAQAC,8MA2BjBC,aAAe,SAACC,GAAU,IAAAzH,EACKrF,EAAK8B,MAA3BiL,EADiB1H,EACjB0H,UAAW3J,EADMiC,EACNjC,QAClB,OAAG2J,EAECxK,EAAAC,EAAAC,cAAA,KACEC,MAAO,CAAEhE,OAAQ,WACjB0E,QAASA,GAEV0J,GAIIA,2EAtCF,IAAAE,EACyC9M,KAAK4B,MAA7CgL,EADDE,EACCF,MAAOlB,EADRoB,EACQpB,WAAYqB,EADpBD,EACoBC,UAAWvK,EAD/BsK,EAC+BtK,MACtC,OACIH,EAAAC,EAAAC,cAAC+J,GAAD,CAAiB9J,MAAOA,GACtBH,EAAAC,EAAAC,cAACyD,EAAA,OAAD,CAAQoB,GAAG,KAAK5E,MAAO,CAAEwK,OAAQ,IAC9BhN,KAAK2M,aAAaC,IAErBvK,EAAAC,EAAAC,cAACiK,GAAD,KACEnK,EAAAC,EAAAC,cAACyD,EAAA,OAAD,CACElD,SAAO,EACPI,QAAS6J,EACTvK,MAAO,CACLlE,QAAS,OACTwH,cAAe,MACfC,WAAY,SACZiD,eAAgB,gBAChB1C,SAAU,SAGZjE,EAAAC,EAAAC,cAACqI,GAAD,CAAcvL,KAAK,QAXrB,OAYOqM,YArByBpM,sxBCd9C,OAAM2N,GAAgBxJ,IAAOC,IAAVwJ,MA8BbC,IAhBkB1J,IAAOC,IAAV0J,MAQG3J,IAAOC,IAAV2J,MAQI5J,IAAOC,IAAV4J,OAIDC,oLACV,IAAApI,EAC4CnF,KAAK4B,MAAhD4L,EADDrI,EACCqI,SAAUZ,EADXzH,EACWyH,MAAOlB,EADlBvG,EACkBuG,WAAYqB,EAD9B5H,EAC8B4H,UACrC,OACE1K,EAAAC,EAAAC,cAAC0K,GAAD,KACE5K,EAAAC,EAAAC,cAACkL,GAAD,CAAkBb,MAAOA,EAAOlB,WAAYA,EAAYqB,UAAWA,IACjE1K,EAAAC,EAAAC,cAAA,WACFF,EAAAC,EAAAC,cAAC4K,GAAD,KACGK,WARiClO,4CCzC/BoO,GAAM,CAClBC,WADkB,SACPC,GAEV,GAAmB,kBADnBA,EAAOA,GAAuD,MAA/CA,EAAKC,WAAWC,UAAUF,EAAK3O,OAAS,GAAa,IAAI2B,KAAKgN,GAAQA,GACzD,CAC3B,IACMG,EAAKH,EAAKI,cACVC,EAFa,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM,MAAM,OAEjEL,EAAKM,YACrBC,EAAKP,EAAKQ,UACZC,EAAKT,EAAKU,WACRC,EAAKF,GAAM,GAAK,KAAO,KAE7BA,GADAA,EAAY,IAAPA,EAAW,GAAKA,GACX,GAAKA,EAAK,GAAKA,EACzB,IAAIG,EAAKZ,EAAKa,aAEd,OADAD,EAAMA,EAAK,GAAM,IAAMA,EAAKA,EAC5B,GAAAhT,OAAUyS,EAAV,KAAAzS,OAAgB2S,EAAhB,MAAA3S,OAAuBuS,EAAvB,OAAAvS,OAA+B6S,EAA/B,KAAA7S,OAAqCgT,EAArC,KAAAhT,OAA2C+S,GAE3C,MAAO,IAQTG,cAxBkB,SAwBJC,EAAOjN,GACpB,QAAIvB,MAAMyO,QAAQD,IACXA,EAAME,KAAK,SAAAC,GACjB,OAAOA,IAAepN,KAOxBqN,iBAlCkB,SAkCDrN,GAChB,OAAOA,EAAQ,MAAQ,MAGxBsN,aAtCkB,SAsCLtH,EAAMzI,GAClB,OAAGyI,EAAKzI,OAASA,EAChB,GAAAzD,OAAUkM,EAAKoG,UAAU,EAAG7O,EAAS,GAArC,OAEOyI,y2BC/BV,OAAMuH,GAAQxL,YAAOyL,KAAPzL,CAAH0L,KAGP,SAAA7U,GAAA,OAAAA,EAAG8U,aAAiCnR,EAAmBf,OAAvBmS,KAgC5B,SAAAzU,GAAA,OAAAA,EAAG0U,iBAAwCvU,IAAI,SAAC6R,EAAO2C,GAAR,kCAAA/T,OAC9B+T,EAAI,EAD0B,oCAAA/T,OAEjC8M,KAAGsE,MAAMA,GAFwB,6DAUjD4C,GADL9K,0NAgFC+K,qBAAuB,SAACC,EAASC,GAC/B,IAAMC,EAAoB9P,EAAK+P,kBAC7B/P,EAAK8B,MAAMkO,mBACXH,GAEEC,GACFA,EAAkBF,MAQtBK,WAAa,SAACL,EAASM,EAAW/N,GACZnC,EAAK8B,MAAjBwD,QAER,OAAGsI,GAAIgB,cAAc5O,EAAK8B,MAAMqO,iBAAkBhO,GAE9CI,EAAAC,EAAAC,cAAA,KACEC,MAAO,CAAEhE,OAAQ,WACjB0E,QAAS,WACPpD,EAAK2P,qBAAqBC,EAASzN,KAGpCnC,EAAKoQ,QAAQR,EAASM,EAAW/N,IAMpCnC,EAAKoQ,QAAQR,EAASM,EAAW/N,MAQvCiO,QAAU,SAACR,EAASM,EAAWL,GAC7B,IACIQ,EADEzO,EAAQgO,EAAQM,EAAUI,QAAQ,MAAO,KAG/C,OAAI1C,GAAIgB,cAAc5O,EAAK8B,MAAMyO,cAAeV,IAE9CQ,EAAiBrQ,EAAK+P,kBACpB/P,EAAK8B,MAAM0O,gBACXX,IAGOQ,EAAezO,GAGfA,EAGa,mBAAVA,EACCgM,GAAIqB,iBAAiBrN,GAErBA,KAOjBmO,kBAAoB,SAACU,EAAgBC,GAEnC,IAIMC,EAAaF,EAAeG,OAJZ,SAAAC,GACpB,OAAOA,EAAQ1O,QAAUuO,IAG6B,GACxD,OAAOC,EAAaA,EAAWG,GAAK,+FAjJZ/O,GACxB7B,KAAKa,SAAS,CACZkB,KAAMF,EAAUE,wCAIX,IAAA8F,EAAA7H,KAAAmF,EASHnF,KAAK4B,MAPPiP,EAFK1L,EAEL0L,SACA9O,EAHKoD,EAGLpD,KACAS,EAJK2C,EAIL3C,MACAsO,EALK3L,EAKL2L,iBACAC,EANK5L,EAML4L,SACAC,EAPK7L,EAOL6L,KACA5B,EARKjK,EAQLiK,YAEF,OACE/M,EAAAC,EAAAC,cAAA,OACE6F,UAAU,YACV5F,MAAKvG,OAAAC,EAAA,EAAAD,CAAA,GAAOkC,GAAO8S,UAAczO,IAEjCH,EAAAC,EAAAC,cAAC2O,GAAD,CAAOC,QAAM,EAACC,aAAW,EAAChC,YAAaA,GACrC/M,EAAAC,EAAAC,cAAC2O,GAAM/J,OAAP,KACE9E,EAAAC,EAAAC,cAAC2O,GAAMG,IAAP,KACGR,EAAS9V,IAAI,SAAAuW,GAAO,OACnBjP,EAAAC,EAAAC,cAAC2O,GAAMK,WAAP,CACE/O,MAAO,CAAE6D,MAAO9C,GAChB9B,IAAG,GAAAjG,OAAK8V,EAAQlB,QAAQ,MAAO,IAA5B,aAEFkB,KAGJP,GAAY1O,EAAAC,EAAAC,cAAC2O,GAAMK,WAAP,QAGjBlP,EAAAC,EAAAC,cAAC2O,GAAMM,KAAP,KACGzP,EAAKhH,IAAI,SAAC2U,EAAS+B,GAAV,OACRpP,EAAAC,EAAAC,cAAC2O,GAAMG,IAAP,CAAW5P,IAAG,OAAAjG,OAASiW,IACpBZ,EAAS9V,IAAI,SAACiV,EAAWL,GACxB,OACEtN,EAAAC,EAAAC,cAAC2O,GAAMQ,KAAP,CACElP,MAAO,CACLC,UAAWiL,GAAIgB,cACboC,EACAnB,GAEE,OACA,SAENlO,IAAG,GAAAjG,OAAKwU,EAAL,KAAAxU,OAAkBmU,IAEpB9H,EAAKkI,WAAWL,EAASM,EAAWL,MAI1CoB,GACC1O,EAAAC,EAAAC,cAAC2O,GAAMQ,KAAP,CACEtJ,UAAU,gBACV5F,MAAO,CAAE6D,MAAO9C,EAAiB/E,OAAQ,WACzC0E,QAAS,kBAAM8N,EAAKtB,EAAQiC,MAH9B,qBA/DItO,IAAM/D,gBA4JtBnB,GAAS,CACb8S,UAAW,CACTtI,MAAO,OACPF,OAAQ,QAEVmJ,OAAQ,CACNnT,WAAY,CAAC,YAAa,cAC1B6H,SAAU,SACVjI,WAAY,OACZwT,cAAe,OACfxL,MAAO9C,IAIIiM,MCpNAsC,GAXG,SAAAlQ,GAAK,OACtBS,EAAAC,EAAAC,cAACyD,EAAA,MAAD,CACCjD,OAAK,EACLrB,MAAOE,EAAMF,MACb9D,MAAOgE,EAAMhE,MACbgI,YAAahE,EAAMhE,MACnBiI,SAAU,SAAAjB,GAAUhD,EAAMiE,SAASjB,IACnCpC,MAAO,CAAEuP,aAAc,UCKVC,GAZI,SAAApQ,GAAK,OACvBS,EAAAC,EAAAC,cAAA,OAAK6F,UAAU,yBAAyB5F,MAAO,CAAElE,QAAS,OAAQwH,cAAe,MAAOiM,aAAc,QACrG1P,EAAAC,EAAAC,cAAA,UAAQ6F,UAAU,kBAAkBxG,EAAMhE,OAC1CyE,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CACCH,SAAU,SAAAjB,GAAUhD,EAAMiE,SAASjB,IACnClD,MAAOE,EAAMF,MACb9D,MAAOgE,EAAMhE,MACb4E,MAAOrE,GAAO8T,aAOX9T,GAAS,CACd8T,SAAU,CACTC,KAAM,EACNtI,OAAQ,+BACRuI,gBAAiB,cACjBC,wBAAyB,eACzBC,qBAAsB,eACtBlM,WAAY,aACZmM,aAAc,MACdlM,cAAe,aACfmM,YAAa,QCZAC,GAZI,SAAA5Q,GAAK,OACvBS,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAClE,QAAS,OAAQwH,cAAe,MAAOiM,aAAc,QACjE1P,EAAAC,EAAAC,cAAA,cAASX,EAAMhE,OACfyE,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CACCE,QAAStE,EAAMF,MACfmE,SAAU,SAAAjB,GAAUhD,EAAMiE,SAASjB,IACnCpC,MAAO,CAAC+D,WAAY,OACpB3I,MAAM,OCJH6U,GADL/N,0NAEGlE,MAAQ,CACJyJ,QAASyI,GAAsB5S,EAAK8B,MAAMqI,SAC1C0I,cAAe7S,EAAK8B,MAAM+Q,eAAiB,GAC3CC,cAAc,KAIlBC,aAAe,SAACC,EAADxY,GAAkB,IAAZoH,EAAYpH,EAAZoH,MAEXqR,EAAsBhL,YAAY,WACpC,IAAIjI,EAAKU,MAAMoS,aAAa,KAChBI,EAAalT,EAAK8B,MAAlBoR,SACRhL,cAAc+K,GACd,IAAME,EAAcD,EAAWE,GAAepT,EAAKU,MAAMmS,cAAejR,EAAO5B,EAAK8B,MAAMqE,IAAM,CAACkN,OAAU,SAAUzR,MAAUA,GAE/H5B,EAAKe,SAAS,CAAE8R,cAAejR,GAAS,WAEpC5B,EAAK8B,MAAMiE,UACX/F,EAAK8B,MAAMiE,SAASoN,OAI7B,8FAImBpR,GACtB7B,KAAKa,SAAS,CACVoJ,QAASyI,GAAsB7Q,EAAUoI,SACzC0I,cAAe9Q,EAAU8Q,iDAIxB,IAAAhN,EAC4C3F,KAAKQ,MAA9CmS,EADHhN,EACGgN,cAAe1I,EADlBtE,EACkBsE,QAAS2I,EAD3BjN,EAC2BiN,aAD3BzN,EAEuBnF,KAAK4B,MAAzBhE,EAFHuH,EAEGvH,MAAOoV,EAFV7N,EAEU6N,SACf,OACI3Q,EAAAC,EAAAC,cAAA,OAAK6F,UAAU,yBAAyB5F,MAAO,CAAClE,QAAS,OAAQwH,cAAe,MAAOiM,aAAc,QAC7G1P,EAAAC,EAAAC,cAAA,UAAQ6F,UAAU,iBAAiB5F,MAAO,CAAClE,QAAS,OAAQwH,cAAe,SAAUkD,eAAgB,SAAUjD,WAAY,WAAYnI,GAC1HoV,EACD3Q,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CACIH,QAASA,EACTrE,YAAahI,GAAS,mBACtBwV,QAAM,EACNC,WAAS,EACTtQ,OAAK,EACLiQ,UAAQ,EACRtR,MAAOiR,EACP9M,SAAU7F,KAAK6S,aACf5P,SAAU2P,EACVpQ,MAAOrE,GAAOmV,WAElBjR,EAAAC,EAAAC,cAAC6H,GAAA,EAAD,CACIH,QAASA,EACTrE,YAAahI,GAAS,mBACtBwV,QAAM,EACNC,WAAS,EACTtQ,OAAK,EACLrB,MAAOiR,EACP9M,SAAU7F,KAAK6S,aACf5P,SAAU2P,EACVpQ,MAAOrE,GAAOmV,mBA9DTjQ,IAAM/D,gBAwEzBoT,GAAwB,SAAAa,GAC1B,OAAGpT,MAAMyO,QAAQ2E,IAAWA,EAAO,GAC9BA,EAAO,GAAG9R,KAAO8R,EAAO,GAAG7L,MAAQ6L,EAAO,GAAG7R,MACrC6R,EAEAA,EAAOxY,IAAI,SAAA2G,GACd,MAAO,CACHD,IAAKC,EAAMD,KAAOC,EAClBgG,KAAMhG,EAAMgG,MAAQhG,EACpBA,MAAOA,EAAMA,OAASA,KAKzB,IAMTwR,GAAiB,SAACM,EAAQC,EAAQxN,GAIpC,IAFA,IAAI0I,EAAQ,GAEHY,EAAI,EAAGA,EAAIiE,EAAOvU,OAAQsQ,IAC/BZ,EAAM6E,EAAOjE,KAAM,EAGvB,IAASA,EAAI,EAAGA,EAAIkE,EAAOxU,OAAQsQ,IAC3BZ,EAAM8E,EAAOlE,WACNZ,EAAM8E,EAAOlE,IAEpBZ,EAAM8E,EAAOlE,KAAM,EAI3B,IAAMnD,EAAWnQ,OAAOwB,KAAKkR,GAAO,GAEpC,OAAGjB,GAAIgB,cAAc8E,EAAQpH,GAClB,CAAC+G,OAAQ,SAAUzR,MAAQ0K,EAAUnG,GAAIA,GAEzC,CAACkN,OAAQ,MAAOzR,MAAO0K,EAAUnG,GAAIA,IAIrCwM,MAETtU,GAAS,CACXmV,SAAU,CACNpB,KAAM,EACN5T,QAAS,OACTwH,cAAe,MACfC,WAAY,SACZ6D,OAAQ,+BACRuI,gBAAiB,cACjBC,wBAAyB,eACzBC,qBAAsB,eACtBlM,WAAY,YACZmM,aAAc,QACdlM,cAAe,YACfmM,YAAa,qjCCxId,IAAMmB,GAAuB/U,IAAHgV,63CCA1B,OAAMC,GAAuBjV,IAAHkV,MC4JlBC,GAlJdhV,EAAQ4U,GAAsB,CAC9BrU,KAAM,oBAENP,EAAQ8U,GAAsB,CAC9BvU,KAAM,+NAGNmB,MAAQ,CACDoL,OAAQ9L,EAAK8B,MAAMgK,OACnBmI,wBAAyBjU,EAAK8B,MAAMgK,OAAOoI,gBAAgBjZ,IAAI,SAAAoY,GAAY,OAAOA,EAAOlN,QAShGoG,KAAO,WAAK,IAAAlH,EACyCrF,EAAK8B,MAA5C6J,EADFtG,EACEsG,QAASwI,EADX9O,EACW8O,aAAcC,EADzB/O,EACyB+O,aADzBvO,EAEqC7F,EAAKU,MAAxCoL,EAFFjG,EAEEiG,OAAQmI,EAFVpO,EAEUoO,wBACTzO,EAAYsG,EAQlB,GAPAtG,EAAU6O,MAAQC,WAAW9O,EAAU6O,OACvC7O,EAAU+O,MAAQD,WAAW9O,EAAU+O,OACvC/O,EAAUgP,eAAiBF,WAAW9O,EAAUgP,gBAChDhP,EAAUiP,OAASC,SAASlP,EAAUiP,QACtCjP,EAAUmP,MAAQD,SAASlP,EAAUmP,OAGlC7I,EAAO3F,GAAG,CACT,IAAMyO,EAAcpP,EAAU0O,gBAAgBjZ,IAAI,SAAAoY,GAAW,OAAOA,EAAOlN,KAC3EX,EAAUqP,yBAA2BZ,EAAwBrD,OAAO,SAAAkE,GAChE,OAAQlH,GAAIgB,cAAcgG,EAAaE,KACxC7Z,IAAI,SAAA8Z,GAAa,MAAO,CAAC5O,GAAI4O,KAChCvP,EAAUwP,iBAAmBxP,EAAU0O,gBAAgBjZ,IAAI,SAAAoY,GAAW,MAAO,CAAClN,GAAIkN,EAAOlN,MACzFiO,EAAa,CAAC5O,cAAYrE,KAAK,SAAAsE,GAC3BkG,WAGJwI,EAAa,CAAC3O,cAAYrE,KAAK,SAAAsE,GAC3BkG,SAKZsE,WAAa,WAAM,IACPnE,EAAW9L,EAAKU,MAAhBoL,OADOkB,EAE8BhN,EAAK8B,MAA1CmT,EAFOjI,EAEPiI,sBACR,MAAsB,WAHPjI,EAEgBpB,WAE/B,CACIrJ,EAAAC,EAAAC,cAACyS,GAAD,CAAYvT,IAAK,mBAAwBC,MAAOkK,EAAOqJ,mBAAqB,GAAIrX,MAAO,oBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,wBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAO6I,MAAyB7W,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC6S,GAAD,CAAY3T,IAAK,iBAAkBkR,cAAe/G,EAAOyJ,UAAYC,GAAgB,GAAIrL,QAASqL,GAAiB1X,MAAO,WAAYiI,SAAU,SAACjB,GAAW9E,EAAKyV,eAAe3Q,MAChLvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,uBAAwBC,MAAOkK,EAAO0I,gBAAkB,GAAO1W,MAAO,iBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,qBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAOuI,OAAS,GAAgBvW,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAOyI,OAAS,GAAgBzW,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,eAAwBC,MAAOkK,EAAO2I,QAAU,GAAe3W,MAAO,SAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,aAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,sBAAwBC,MAAOkK,EAAO4J,eAAiB,GAAQ5X,MAAO,gBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,oBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAO6J,WAAa,GAAgB7X,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,gBAC/JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,qBAAwBC,MAAOkK,EAAO8J,cAAgB,GAAS9X,MAAO,eAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,mBAC3JvC,EAAAC,EAAAC,cAAC6S,GAAD,CAAY3T,IAAK,wBAAyBkR,cAAe/G,EAAOoI,gBAAkBpI,EAAOoI,gBAAgBjZ,IAAI,SAAAoY,GAAW,OAAOA,EAAOlN,KAAO,GAAIrI,MAAO,QAASoV,UAAU,EAAM/I,QAASnK,EAAK6V,kBAAkBZ,EAAuB,qBAAsBlP,SAAU,SAACjB,GAAY9E,EAAK8V,qBAAqBhR,MAC/SvC,EAAAC,EAAAC,cAACsT,GAAD,CAAYpU,IAAK,eAAwBC,MAAOkK,EAAOkK,OAAmBlY,MAAO,OAAqBiI,SAAU,SAACjB,GAAW9E,EAAKiW,oBAAoBnR,EAAO,aAC5JvC,EAAAC,EAAAC,cAACsT,GAAD,CAAYpU,IAAK,eAAwBC,MAAOkK,EAAOoK,OAAmBpY,MAAO,SAAqBiI,SAAU,SAACjB,GAAW9E,EAAKiW,oBAAoBnR,EAAO,aAC5JvC,EAAAC,EAAAC,cAAA,OAAKd,IAAI,UAASY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,WAAsDmC,EAAOqK,OAAO5W,MAAQ,IAC9FgD,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOsK,aACzG7T,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOuK,cAE7G,CACI9T,EAAAC,EAAAC,cAACyS,GAAD,CAAYvT,IAAK,mBAAwBC,MAAOkK,EAAOqJ,mBAAqB,GAAIrX,MAAO,oBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,wBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAO6I,MAAyB7W,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC6S,GAAD,CAAY3T,IAAK,iBAAkBkR,cAAe/G,EAAOyJ,UAAYC,GAAgB,GAAIrL,QAASqL,GAAiB1X,MAAO,WAAYiI,SAAU,SAACjB,GAAW9E,EAAKyV,eAAe3Q,MAChLvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,uBAAwBC,MAAOkK,EAAO0I,gBAAkB,GAAO1W,MAAO,iBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,qBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAOuI,OAAS,GAAgBvW,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAOyI,OAAS,GAAgBzW,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,eAAwBC,MAAOkK,EAAO2I,QAAU,GAAe3W,MAAO,SAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,aAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,sBAAwBC,MAAOkK,EAAO4J,eAAiB,GAAQ5X,MAAO,gBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,oBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAO6J,WAAa,GAAgB7X,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,gBAC/JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,qBAAwBC,MAAOkK,EAAO8J,cAAgB,GAAS9X,MAAO,eAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,mBAC3JvC,EAAAC,EAAAC,cAACsT,GAAD,CAAYpU,IAAK,eAAwBC,MAAOkK,EAAOkK,OAAmBlY,MAAO,OAAqBiI,SAAU,SAACjB,GAAW9E,EAAKiW,oBAAoBnR,EAAO,aAC5JvC,EAAAC,EAAAC,cAACsT,GAAD,CAAYpU,IAAK,eAAwBC,MAAOkK,EAAOoK,OAAmBpY,MAAO,SAAqBiI,SAAU,SAACjB,GAAW9E,EAAKiW,oBAAoBnR,EAAO,aAC5JvC,EAAAC,EAAAC,cAAA,OAAKd,IAAI,UAASY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,WAAsDmC,EAAOqK,OAAO5W,MAAQ,IAC9FgD,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOsK,aACzG7T,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOuK,iBAIjHjB,aAAe,SAACtQ,EAAOwR,GAAa,IACxBxK,EAAW9L,EAAKU,MAAhBoL,OACR,GAAIhH,EAAMC,OAAOnD,QAAUkK,EAAOwK,GAAW,CACzC,IAAIC,EAAYpa,OAAOqP,OAAO,GAAIM,GAClCyK,EAAUD,GAAYxR,EAAMC,OAAOnD,MACvC5B,EAAKe,SAAS,CAAE+K,OAAQyK,QAI5BN,oBAAsB,SAACnR,EAAOwR,GAAa,IAC/BxK,EAAW9L,EAAKU,MAAhBoL,OACJyK,EAAYpa,OAAOqP,OAAO,GAAIM,GACxCyK,EAAUD,IAAaC,EAAUD,GACjCtW,EAAKe,SAAS,CAAE+K,OAAQyK,OAGtBT,qBAAuB,SAAChR,GAAU,IACtBgH,EAAW9L,EAAKU,MAAhBoL,OACAmJ,EAA0BjV,EAAK8B,MAA/BmT,sBACJsB,EAAYpa,OAAOqP,OAAO,GAAIM,GAClC,GAAoB,QAAjBhH,EAAMuO,OAAiB,CACtB,IAAMmD,EAAiBvB,EAAsBrE,OAAO,SAAAyC,GAAY,OAAOA,EAAOlN,KAAOrB,EAAMlD,QAAQ,KAClEkK,EAAOoI,iBAAkBpI,EAAOoI,gBAAgBnF,KAAK,SAAAsE,GAAW,OAAOA,EAAOlN,KAAOrB,EAAMlD,SAExH2U,EAAUrC,gBAAgBhS,KAAKsU,OAEjC,CACF,IAAIC,EACJF,EAAUrC,gBAAgBnF,KAAK,SAACsE,EAAQ5D,GACpC,GAAG4D,EAAOlN,KAAOrB,EAAMlD,MAEnB,OADA6U,EAAchH,GACP,IAGf8G,EAAUrC,gBAAgB7R,OAAOoU,EAAa,GAGlDzW,EAAKe,SAAS,CAAE+K,OAAQyK,OAG5Bd,eAAiB,SAAC3Q,GAAU,IAChBgH,EAAW9L,EAAKU,MAAhBoL,OACR,GAAIhH,EAAMuO,QAAUvO,EAAMlD,MAAO,CAC7B,IAAI2U,EAAYpa,OAAOqP,OAAO,GAAIM,GAClCyK,EAAUhB,SAAWzQ,EAAMlD,MAC/B5B,EAAKe,SAAS,CAAE+K,OAAQyK,QAI5BV,kBAAoB,SAACa,EAAMC,GACvB,OAAOD,EAAKzb,IAAI,SAAA2b,GACZ,MAAO,CACHjV,IAAKiV,EAAKzQ,GACVvE,MAAOgV,EAAKzQ,GACZyB,KAAMgP,EAAKD,OAEb,4EAnIJ,IACA7K,EAAW5L,KAAKQ,MAAhBoL,OADA+K,EAEwB3W,KAAK4B,MAA7B8J,EAFAiL,EAEAjL,WAAYD,EAFZkL,EAEYlL,QACRE,EAAe3L,KAAK+P,aAChC,OAAO1N,EAAAC,EAAAC,cAACqU,GAAD,CAASnL,QAASA,EAASC,WAAYA,EAAYE,OAAQA,EAAQD,aAAcA,EAAcU,KAAMrM,KAAKqM,cATzF/M,uBA8IpBgW,GAAkB,CACpB,UACA,OACA,QACA,WACA,SACA,WACA,UACA,YACA,eACA,sVCxKG,IAAMuB,GAAyBlY,IAAHmY,0aCA5B,OAAMC,GAAyBpY,IAAHqY,MCiEpBC,GA3DdnY,EAAQ+X,GAAwB,CAChCxX,KAAM,sBAENP,EAAQiY,GAAwB,CAChC1X,KAAM,iOAGNmB,MAAQ,CACPoL,OAAQ9L,EAAK8B,MAAMgK,UASpBS,KAAO,WAAK,IAAAlH,EACuCrF,EAAK8B,MAAhD6J,EADItG,EACJsG,QAASyL,EADL/R,EACK+R,eAAgBC,EADrBhS,EACqBgS,eACnBvL,EAAU9L,EAAKU,MAAfoL,OACDtG,EAAYsG,EAElBtG,EAAUmP,MAAQD,SAASlP,EAAUmP,OAElC7I,EAAO3F,GACNkR,EAAe,CAAC7R,cAAYrE,KAAK,SAAAsE,GAC7BkG,MAGJyL,EAAe,CAAC5R,cAAYrE,KAAK,SAAAsE,GAC7BkG,SAKZsE,WAAa,WAAM,IACPnE,EAAW9L,EAAKU,MAAhBoL,OACR,MAAO,CACHvJ,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,aAAwBC,MAAOkK,EAAOvM,MAAQ,GAAgBzB,MAAO,OAAiBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,WACrJvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,sBAAwBC,MAAOkK,EAAO4J,eAAiB,GAAO5X,MAAO,gBAAiBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,oBACrJvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,iBAAwBC,MAAOkK,EAAOwL,UAAY,GAAYxZ,MAAO,WAAiBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,eACrJvC,EAAAC,EAAAC,cAAA,OAAKd,IAAI,WAAUY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,YAAuDmC,EAAOyL,QAAQ3G,OAAO,SAAAyC,GAAW,OAAyB,IAAlBA,EAAO2C,SAAmB/a,IAAI,SAAAoY,GAAW,OAAOzF,GAAIsB,aAAamE,EAAO8B,kBAAmB,MAAM5M,KAAK,OACxNhG,EAAAC,EAAAC,cAAA,OAAKd,IAAI,SAAQY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,UAAqDmC,EAAOyL,QAAQ3G,OAAO,SAAAyC,GAAW,OAAyB,IAAlBA,EAAO2C,SAAkB/a,IAAI,SAAAoY,GAAW,OAAOzF,GAAIsB,aAAamE,EAAO8B,kBAAmB,MAAM5M,KAAK,OACnNhG,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOsK,aACzG7T,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOuK,iBAKjHjB,aAAe,SAACtQ,EAAOwR,GAAa,IACxBxK,EAAW9L,EAAKU,MAAhBoL,OACR,GAAIhH,EAAMC,OAAOnD,QAAUkK,EAAOwK,GAAW,CACzC,IAAIC,EAAYpa,OAAOqP,OAAO,GAAIM,GAClCyK,EAAUD,GAAYxR,EAAMC,OAAOnD,MACnC5B,EAAKe,SAAS,CAAE+K,OAAQyK,8EA5C1B,IACAzK,EAAW5L,KAAKQ,MAAhBoL,OACAH,EAAYzL,KAAK4B,MAAjB6J,QACIE,EAAe3L,KAAK+P,aAChC,OAAO1N,EAAAC,EAAAC,cAACqU,GAAD,CAASnL,QAASA,EAASC,WAAW,WAAWE,OAAQA,EAAQD,aAAcA,EAAcU,KAAMrM,KAAKqM,cARrF/M,ksBCZrB,UAAMgY,GAA6B3Y,IAAH4Y,MCoBjCC,GAAW,CACfvR,GAAI,GACJ5G,KAAM,GACNmW,cAAe,GACf4B,SAAU,GACVC,QAAS,GACTnB,UAAW,GACXC,UAAW,IAGPhD,GAAS,CACblN,GAAI,GACJuR,SAAU,CACRvR,GAAI,GACJ5G,KAAM,GACNgY,QAAS,GACTnB,UAAW,GACXC,UAAW,IAEb1B,MAAO,GACPe,cAAe,GACfQ,QAAQ,EACRf,kBAAmB,GACnBwC,yBAA0B,GAC1BpC,SAAU,UACVI,UAAW,GACXnB,eAAgB,EAChBH,MAAO,EACPE,MAAO,EACPE,OAAQ,EACRmB,aAAc,GACdI,QAAQ,EACR9B,gBAAiB,GACjBiC,OAAQ,CACP5W,KAAM,IAEP6W,UAAW,GACXC,UAAW,IAoOEjK,OAhOdpN,EAAQwY,GAA4B,CACpCjY,KAAK,4BAFLqF,gOAKClE,MAAQ,CACNkX,MAAO,KACPC,WAAW,EACd/L,OAAQ4L,GACR9L,WAAY,cA+CZqB,UAAY,SAACnB,EAAQF,EAAYkM,GAChChM,EAAOiM,YAAcD,EAAI3R,GACzBnG,EAAKe,SAAS,CAAC+K,OAAQA,EAAQ+L,WAAW,EAAMjM,WAAYA,GAA0B5L,EAAKU,MAAMkL,WAAYoM,iBAAkBF,OAyB/HG,cAAgB,WACdjY,EAAK8B,MAAMoW,wBAAwBhX,UACnClB,EAAKe,SAAS,CAAE8W,UAAW,KAAM/L,OAAQ4L,QAG3CS,SAAW,SAACL,GAGZ,OAAG9X,EAAKoY,aAGN7V,EAAAC,EAAAC,cAAC4V,GAAD,CACCtH,SAAU,CACT,oBACA,QACA,SACA,SACA,aACA,cAED9O,KAAM6V,EAAIP,QAAQ3G,OAdnB,SAAqByC,GAAQ,OAAyB,IAAlBA,EAAO2C,SAcJ/a,IAAI,SAAAgH,GAEzC,MAAO,CACNqW,GAAIrW,EAAKkE,GACToS,SAAUtW,EAAKyV,SACfc,MAAOvW,EAAK0S,MACZ8D,aAAcxW,EAAKyT,cACnBgD,OAAQzW,EAAKiU,OACbyC,iBAA6C,KAA3B1W,EAAKkT,kBAA2BlT,EAAKkT,kBAAoB,iBAC3EyD,uBAAwB3W,EAAK0V,yBAC7BkB,SAAU5W,EAAKsT,SACfuD,SAAU7W,EAAK0T,UACfoD,cAAe9W,EAAKuS,eACpBwE,MAAO/W,EAAKoS,MACZ4E,MAAOhX,EAAKsS,MACZ2E,YAAajX,EAAK2T,aAClBuD,OAAQlX,EAAK+T,OACboD,OAAQnX,EAAKkU,OAAO5W,KACpB8Z,UAAW,IAAIvY,KAAKmB,EAAKmU,WACzBkD,UAAW,IAAIxY,KAAKmB,EAAKoU,cAG3BrF,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAClCb,iBAAkB,CAAC,GACnBH,mBAAoB,CACnB,CACC7N,MAAO,EACP2O,GAAI,SAAC7O,GACJ,IAAM2J,EAAa5L,EAAKoY,aAAe,OAAS,SAChDpY,EAAKiN,UAAU6K,EAAIP,QAAQ3G,OAAO,SAAAgG,GAAS,OAAOA,EAAKzQ,KAAOlE,EAAKqW,KAAK,GAAI1M,EAAYkM,MAI3FvH,cAAe,CAAC,EAAG,GACnBC,gBAAiB,CAChB,CACCrO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,KAGxB,CACCO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,QAS1BW,EAAAC,EAAAC,cAAC4V,GAAD,CACCtH,SAAU,CACT,oBACA,QACA,SACA,QACA,SACA,aACA,cAED9O,KAAM6V,EAAIP,QAAQ3G,OA5ErB,SAAuByC,GAAQ,OAAyB,IAAlBA,EAAO2C,SA4EF/a,IAAI,SAAAgH,GAE3C,MAAO,CACNqW,GAAIrW,EAAKkE,GACToS,SAAUtW,EAAKyV,SACfc,MAAOvW,EAAK0S,MACZ8D,aAAcxW,EAAKyT,cACnBgD,OAAQzW,EAAKiU,OACbyC,iBAA6C,KAA3B1W,EAAKkT,kBAA2BlT,EAAKkT,kBAAoB,iBAC3EyD,uBAAwB3W,EAAK0V,yBAC7BkB,SAAU5W,EAAKsT,SACfuD,SAAU7W,EAAK0T,UACfoD,cAAe9W,EAAKuS,eACpBwE,MAAO/W,EAAKoS,MACZ4E,MAAOhX,EAAKsS,MACZ2E,YAAajX,EAAK2T,aAClBuD,OAAQlX,EAAK+T,OACbuD,eAAgBtX,EAAKiS,gBAAkBjS,EAAKiS,gBAAgBjZ,IAAI,SAAAue,GAAQ,OAAO5L,GAAIsB,aAAasK,EAAIrE,kBAAmB,MAAM5M,KAAK,MAAQ,KAC1I6Q,OAAQnX,EAAKkU,OAAO5W,KACpB8Z,UAAW,IAAIvY,KAAKmB,EAAKmU,WACzBkD,UAAW,IAAIxY,KAAKmB,EAAKoU,cAG3BrF,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCb,iBAAkB,CAAC,GACnBH,mBAAoB,CACnB,CACC7N,MAAO,EACP2O,GAAI,SAAC7O,GACJ,IAAM2J,EAAa5L,EAAKoY,aAAe,OAAS,SAChDpY,EAAKiN,UAAU6K,EAAIP,QAAQ3G,OAAO,SAAAgG,GAAS,OAAOA,EAAKzQ,KAAOlE,EAAKqW,KAAK,GAAI1M,EAAYkM,MAI3FvH,cAAe,CAAC,EAAG,GACnBC,gBAAiB,CAChB,CACCrO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,KAGxB,CACCO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,WAS3BwW,WAAa,WACZ,MAAiC,WAA1BpY,EAAK8B,MAAM2X,MAAMpe,8EAjNjB,IAAA0M,EAAA7H,KAAAmF,EACgCnF,KAAK4B,MAAvCoW,EADE7S,EACF6S,wBAAyBwB,EADvBrU,EACuBqU,KACjC,OAAGxB,EAAwBhV,QACnBX,EAAAC,EAAAC,cAACkX,GAAA,EAAD,CAASzW,SAAO,EAACR,MAAO,CAACiG,OAAO,QAASE,MAAM,WAG7C,CACJtG,EAAAC,EAAAC,cAACmX,GAAD,CACJjY,IAAI,0BACCmL,MAAO5M,KAAKkY,aAAe,QAAU,UACrCxM,WAAW,WAChBqB,UAAW,WAAOlF,EAAKhH,SAAS,CAAC8W,WAAW,EAAM/L,OAAQ4L,GAAU9L,WAAY,cAChFlJ,MAAO,CAACmX,UAAW,SAGjB3B,EAAwB4B,iBAAiB7e,IAAI,SAAA6c,GAI9C,OAHI/P,EAAKqQ,eACP/E,GAAO2C,QAAS,GAGjBzT,EAAAC,EAAAC,cAACkX,GAAA,EAAD,CAAShY,IAAG,GAAAjG,OAAKoc,EAAIvY,KAAK+Q,QAAQ,MAAO,IAA7B,cACX/N,EAAAC,EAAAC,cAACkL,GAAD,CACCb,MAAOgL,EAAIvY,KACXwN,WAAW,EACX3J,QAAS,WAAO2E,EAAKhH,SAAS,CAAC8W,WAAW,EAAM/L,OAAQgM,EAAKlM,WAAY,cACzEA,WAAY7D,EAAKqQ,aAAe,OAAS,SACzCnL,UAAW,WACVoG,GAAO0E,YAAcD,EAAI3R,GACzBkN,GAAO0G,UAAYL,EAAKM,GAAG7T,GAC3BkN,GAAOqE,SAAWI,EAClB/P,EAAKhH,SAAS,CAAC8W,WAAW,EAAM/L,OAAQuH,GAAQzH,WAAY7D,EAAKqQ,aAAe,OAAS,SAAUJ,iBAAkBF,KAEtHpV,MAAO,CAACuP,aAAc,UAEtBlK,EAAKoQ,SAASL,OAMlB5X,KAAK+Z,uDASU,IAAApU,EAC4C3F,KAAKQ,MAAzDoL,EADQjG,EACRiG,OAAQ+L,EADAhS,EACAgS,UAAWjM,EADX/F,EACW+F,WAAYoM,EADvBnS,EACuBmS,iBACvC,IAAKH,EAAa,OAAO,KAE1B,OAAOjM,GACN,IAAK,WACJ,OAAOrJ,EAAAC,EAAAC,cAACyX,GAAD,CAAevY,IAAI,iBAAiBmK,OAAQA,EAAQH,QAASzL,KAAK+X,gBAC1E,IAAK,OAEJ,OADAnM,EAAO6I,WAAyBvV,IAAjB0M,EAAO6I,OAAwC,OAAjB7I,EAAO6I,OAAmC,KAAjB7I,EAAO6I,MAAe7I,EAAO6I,MAAQqD,EAAiBT,QAAQpY,OAAS,EACtIoD,EAAAC,EAAAC,cAAC0X,GAAD,CAAaxY,IAAI,aAAamK,OAAQA,EAAQF,WAAW,OAAOD,QAASzL,KAAK+X,gBACtF,IAAK,SACJ,IAAMmC,EAAwBpC,EAAmBA,EAAiBT,QAAQ3G,OAAO,SAAAyC,GAAY,OAAyB,IAAlBA,EAAO2C,SAAqB,GAKhI,OAJAlK,EAAOiM,YAAcC,EAAiB7R,GACtC2F,EAAO6I,WAAyBvV,IAAjB0M,EAAO6I,OAAwC,OAAjB7I,EAAO6I,OAAmC,KAAjB7I,EAAO6I,MAAe7I,EAAO6I,MAAQqD,EAAiBT,QAAQpY,OAAS,EAC7I2M,EAAOoI,gBAAkBpI,EAAOoI,iBAAmB,GACnDpI,EAAOkK,QAAS,EACTzT,EAAAC,EAAAC,cAAC0X,GAAD,CAAaxY,IAAI,eAAemK,OAAQA,EAAQF,WAAW,SAASD,QAASzL,KAAK+X,cAAehD,sBAAuBmF,IAChI,QACC,OAAO,aA3EY5a,6CC5CL6a,8MAhBbtH,aAAe,SAACnR,IAElBmE,EADqB/F,EAAK8B,MAAlBiE,UACC,CAAChB,OAAQ,CAACnD,MAAOA,8EAGf,IAAAyD,EACYnF,KAAK4B,MAArBhE,EADIuH,EACJvH,MAAO8D,EADHyD,EACGzD,MACT,OACJW,EAAAC,EAAAC,cAAA,OAAK6F,UAAU,yBAAyB5F,MAAO,CAAElE,QAAS,OAAQwH,cAAe,MAAOiM,aAAc,QACrG1P,EAAAC,EAAAC,cAAA,UAAQ6F,UAAU,kBAAkBxK,GACpCyE,EAAAC,EAAAC,cAAC6X,GAAA9X,EAAD,CAAYZ,MAAOA,EAAOmE,SAAU7F,KAAK6S,aAAcrQ,MAAOrE,GAAOkc,gBAZnD/a,aAoBdnB,GAAS,CAChBkc,MAAO,CACN1R,MAAO,OACPF,OAAQ,OACRmB,OAAQ,+BACRuI,gBAAiB,cACjBC,wBAAyB,eACzBC,qBAAsB,8sBC7BjB,IAAMiI,GAAyB3b,IAAH4b,grBCA5B,OAAMC,GAAyB7b,IAAH8b,MCgFpBC,GArEd5b,EAAQwb,GAAwB,CAChCjb,KAAM,sBAENP,EAAQ0b,GAAwB,CAChCnb,KAAM,iOAGNmB,MAAQ,CACPoL,OAAQ9L,EAAK8B,MAAMgK,UASpBS,KAAO,WAAK,IAAAlH,EACuCrF,EAAK8B,MAAhD6J,EADItG,EACJsG,QAASkP,EADLxV,EACKwV,eAAgBC,EADrBzV,EACqByV,eACnBhP,EAAU9L,EAAKU,MAAfoL,OACDtG,EAAYsG,EAClBtG,EAAUmP,MAAQD,SAASlP,EAAUmP,OAElC7I,EAAO3F,GACN2U,EAAe,CAACtV,cAAYrE,KAAK,SAAAsE,GAC7BkG,MAGJkP,EAAe,CAACrV,cAAYrE,KAAK,SAAAsE,GAC7BkG,SAKZsE,WAAa,WAAM,IACPnE,EAAW9L,EAAKU,MAAhBoL,OACR,MAAO,CACHvJ,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAOgB,OAAS,GAAgBhP,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAO6I,MAAyB7W,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YAC3JvC,EAAAC,EAAAC,cAACyS,GAAD,CAAYvT,IAAK,mBAAwBC,MAAOkK,EAAOqJ,mBAAqB,GAAIrX,MAAO,oBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,wBAC3JvC,EAAAC,EAAAC,cAACsY,GAAD,CAASpZ,IAAK,aAA2BC,MAAOkK,EAAOkP,MAAQ,GAAiBld,MAAO,OAAqBiI,SAAU,SAACjB,GAAY9E,EAAKoV,aAAatQ,EAAO,WAC5JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,sBAAwBC,MAAOkK,EAAO4J,eAAiB,GAAQ5X,MAAO,gBAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,oBAC3JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,cAAwBC,MAAOkK,EAAO6J,WAAa,GAAgB7X,MAAO,QAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,gBAC/JvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAY1T,IAAK,qBAAwBC,MAAOkK,EAAO8J,cAAgB,GAAS9X,MAAO,eAAqBiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,mBAC3JvC,EAAAC,EAAAC,cAACsT,GAAD,CAAYpU,IAAK,eAAwBC,MAAOkK,EAAOoK,OAAyBpY,MAAO,SAAqBiI,SAAU,SAACjB,GAAW9E,EAAKiW,oBAAoBnR,EAAO,aAClKvC,EAAAC,EAAAC,cAAA,OAAKd,IAAI,SAAQY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,UAAqDmC,EAAOmP,MAAQnP,EAAOmP,MAAMhgB,IAAI,SAAAye,GAAS,OAAOA,EAAKna,OAAOgJ,KAAK,MAAQ,IAC/IhG,EAAAC,EAAAC,cAAA,OAAKd,IAAI,UAASY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,WAAsDmC,EAAOqK,OAAO5W,MAAQ,IAC9FgD,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOsK,aACzG7T,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOuK,iBAIjHjB,aAAe,SAACtQ,EAAOwR,GAAa,IACxBxK,EAAW9L,EAAKU,MAAhBoL,OACR,GAAIhH,EAAMC,OAAOnD,QAAUkK,EAAOwK,GAAW,CACzC,IAAIC,EAAYpa,OAAOqP,OAAO,GAAIM,GAClCyK,EAAUD,GAAYxR,EAAMC,OAAOnD,MACnC5B,EAAKe,SAAS,CAAE+K,OAAQyK,QAIhCN,oBAAsB,SAACnR,EAAOwR,GAAa,IAC/BxK,EAAW9L,EAAKU,MAAhBoL,OACJyK,EAAYpa,OAAOqP,OAAO,GAAIM,GACxCyK,EAAUD,IAAaC,EAAUD,GACjCtW,EAAKe,SAAS,CAAE+K,OAAQyK,6EAvDhB,IACAzK,EAAW5L,KAAKQ,MAAhBoL,OACAH,EAAYzL,KAAK4B,MAAjB6J,QACIE,EAAe3L,KAAK+P,aAChC,OAAO1N,EAAAC,EAAAC,cAACqU,GAAD,CAASnL,QAASA,EAASC,WAAW,WAAWE,OAAQA,EAAQD,aAAcA,EAAcU,KAAMrM,KAAKqM,cARrF/M,iZCjBrB,UAAM0b,GAAoBrc,IAAHsc,MCSxBC,GAAW,CAChBjV,GAAI,GACJwO,MAAO,GACP7H,MAAO,GACPoJ,QAAQ,EACRf,kBAAmB,GACnB6F,KAAM,GACNtF,cAAe,GACfC,UAAW,GACXC,aAAc,GACdqF,MAAO,GACP9E,OAAQ,CACP5W,KAAM,IAEP6W,UAAW,GACXC,UAAW,IA2GGgF,OAvGdrc,EAAQkc,GAAmB,CAC3B3b,KAAK,kBAFLqF,gOAKClE,MAAQ,CACNkX,MAAO,KACPC,WAAW,EACX/L,OAAQsP,MA0EVnO,UAAY,SAAAnB,GACV9L,EAAKe,SAAS,CAAE+K,OAAQA,EAAQ+L,WAAW,OAe7CI,cAAgB,WACdjY,EAAK8B,MAAMwZ,cAAcpa,UACzBlB,EAAKe,SAAS,CAAE8W,UAAW,KAAM/L,OAAQsP,8EAzFjC,IAAArT,EAAA7H,KACFob,EAAkBpb,KAAK4B,MAAvBwZ,cACR,OAAGA,EAAcpY,QACTX,EAAAC,EAAAC,cAACkX,GAAA,EAAD,CAASzW,SAAO,EAACR,MAAO,CAACiG,OAAO,QAASE,MAAM,WAGhD,CACPtG,EAAAC,EAAAC,cAACmX,GAAD,CACCjY,IAAI,4BACJmL,MAAM,YACNlB,WAAW,WACXqB,UAAW,WACXlF,EAAKhH,SAAS,CAAE8W,WAAW,MAG3BtV,EAAAC,EAAAC,cAAC4V,GAAD,CACAtH,SAAU,CACT,QACA,QACA,SACA,oBACA,SACA,aACA,cAED9O,KAAMqZ,EAAcC,UAAUtgB,IAAI,SAAAgH,GACjC,MAAO,CACPqW,GAAIrW,EAAKkE,GACTqS,MAAOvW,EAAK0S,MACZ6G,MAAOvZ,EAAK6K,MACZ4L,OAAQzW,EAAKiU,OACbyC,iBAAkB1W,EAAKkT,kBACvBzD,KAAMzP,EAAK+Y,KACXvC,aAAcxW,EAAKyT,cACnBoD,SAAU7W,EAAK0T,UACfuD,YAAajX,EAAK2T,aAClB6F,MAAOxZ,EAAKgZ,MACZ7B,OAAQnX,EAAKkU,OAAO5W,KACpB8Z,UAAW,IAAIvY,KAAKmB,EAAKmU,WACzBkD,UAAW,IAAIxY,KAAKmB,EAAKoU,cAG1BrF,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCb,iBAAkB,CAAC,GACnBH,mBAAoB,CACnB,CACC7N,MAAO,EACP2O,GAAI,SAAA7O,GAAS8F,EAAKkF,UAAUqO,EAAcC,UAAU3K,OAAO,SAAAgG,GAAS,OAAOA,EAAKzQ,KAAOlE,EAAKqW,KAAM,OAGpG/H,cAAe,CAAC,EAAG,GACnBC,gBAAiB,CAChB,CACArO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,KAGvB,CACAO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,SAMzB1B,KAAK+Z,uDAQU,IAAApU,EACiB3F,KAAKQ,MAA3BoL,EADKjG,EACLiG,OAAQ+L,EADHhS,EACGgS,UADHxS,EAEgBnF,KAAK4B,MAA7B4X,EAFQrU,EAERqU,KAAM4B,EAFEjW,EAEFiW,cACX,OAAKzD,GAIR/L,EAAOiO,UAAYjO,EAAOqK,OAAO5W,KAAOuM,EAAOqK,OAAO5W,KAAOma,EAAKM,GAAG7T,GACrE2F,EAAO6I,WAAyBvV,IAAjB0M,EAAO6I,OAAwC,KAAjB7I,EAAO6I,MAAe7I,EAAO6I,MAAQ2G,EAAcC,UAAUpc,OAAS,EAC5GoD,EAAAC,EAAAC,cAACiZ,GAAD,CAAe/Z,IAAI,kBAAkBmK,OAAQA,EAAQH,QAASzL,KAAK+X,iBAL9D,YAtFWzY,0iBC/BjB,IAAMmc,GAAqB9c,IAAH+c,slBCAxB,OAAMC,GAAqBhd,IAAHid,MCiGhBC,GAxFd/c,EAAQ2c,GAAoB,CAC5Bpc,KAAM,kBAENP,EAAQ6c,GAAoB,CAC5Btc,KAAM,6NAGNmB,MAAQ,CACDoL,OAAQ9L,EAAK8B,MAAMgK,UAS1BS,KAAO,WAAK,IAAAlH,EACsCrF,EAAK8B,MAA/C6J,EADItG,EACJsG,QAASqQ,EADL3W,EACK2W,WAAYC,EADjB5W,EACiB4W,WAAYC,EAD7B7W,EAC6B6W,MAC3BpQ,EAAU9L,EAAKU,MAAfoL,OACDtG,EAAYsG,EAElBtG,EAAU2W,QAAU3W,EAAU4W,KAAO5W,EAAU4W,KAAKjW,GAAK+V,EAAM,GAAG/V,GAE/D2F,EAAO3F,GACN8V,EAAW,CAACzW,cAAYrE,KAAK,SAAAsE,GACzBkG,MAGJqQ,EAAW,CAACxW,cAAYrE,KAAK,SAAAsE,GACzBkG,SAMZsE,WAAa,WAAM,IACPnE,EAAW9L,EAAKU,MAAhBoL,OACAoQ,EAAUlc,EAAK8B,MAAfoa,MACR,MAAO,CACH3Z,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,cAAeC,MAAOkK,EAAOuQ,OAAS,GAAIve,MAAO,QAASiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YACzHvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,iBAAkBC,MAAOkK,EAAO7G,UAAY,GAAInH,MAAO,WAAYiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,eAClIvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,aAAcC,MAAOkK,EAAOvM,MAAQ,GAAIzB,MAAO,OAAQiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,WACtHvC,EAAAC,EAAAC,cAAC4S,GAAD,CAAW1T,IAAK,cAAeC,MAAOkK,EAAOwQ,OAAS,GAAIxe,MAAO,QAASiI,SAAU,SAACjB,GAAW9E,EAAKoV,aAAatQ,EAAO,YACzHvC,EAAAC,EAAAC,cAAC6S,GAAD,CAAY3T,IAAK,aAAckR,cAAe/G,EAAOsQ,KAAOtQ,EAAOsQ,KAAKjW,GAAK+V,EAAM,GAAG/V,GAAIgE,QAASnK,EAAK6V,kBAAkBqG,EAAO,aAAcpe,MAAO,OAAQiI,SAAU,SAACjB,GAAW9E,EAAKuc,WAAWzX,MAGpMvC,EAAAC,EAAAC,cAAA,OAAKd,IAAI,gBAAeY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,iBAAxB,GAAAjO,OAAuFoQ,EAAO0Q,cAAgB,IAC9Gja,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOsK,aACzG7T,EAAAC,EAAAC,cAAA,OAAKd,IAAI,cAAaY,EAAAC,EAAAC,cAAA,UAAQC,MAAO,CAACiH,YAAa,QAA7B,eAAtB,GAAAjO,OAAmFkS,GAAIC,WAAW/B,EAAOuK,iBAKjHjB,aAAe,SAACtQ,EAAOwR,GAAa,IACxBxK,EAAW9L,EAAKU,MAAhBoL,OACR,GAAIhH,EAAMC,OAAOnD,QAAUkK,EAAOwK,GAAW,CACrC,IAAIC,EAAYpa,OAAOqP,OAAO,GAAIM,GACtB,mBAAbwK,EACCC,EAAU6F,KAAKK,UAAY3X,EAAMC,OAAOnD,MAExC2U,EAAUD,GAAYxR,EAAMC,OAAOnD,MAEvC5B,EAAKe,SAAS,CAAE+K,OAAQyK,QAIhCV,kBAAoB,SAACa,EAAMC,GACvB,OAAOD,EAAKzb,IAAI,SAAA2b,GACZ,MAAO,CACHjV,IAAKiV,EAAKzQ,GACVvE,MAAOgV,EAAKzQ,GACZyB,KAAMgP,EAAKD,OAEb,MAGV4F,WAAa,SAACzX,GAAU,IACZgH,EAAW9L,EAAKU,MAAhBoL,OACAoQ,EAAUlc,EAAK8B,MAAfoa,MACR,GAAIpX,EAAMuO,QAAUvO,EAAMlD,MAAO,CAC7B,IAAI2U,EAAYpa,OAAOqP,OAAO,GAAIM,GAClCyK,EAAU6F,KAAOF,EAAMtL,OAAO,SAAAwL,GAAS,OAAOA,EAAKjW,KAAOrB,EAAMlD,QAAQ,GAC5E5B,EAAKe,SAAS,CAAE+K,OAAQyK,8EAzEtB,IACAzK,EAAW5L,KAAKQ,MAAhBoL,OACAH,EAAYzL,KAAK4B,MAAjB6J,QACIE,EAAe3L,KAAK+P,aAChC,OAAO1N,EAAAC,EAAAC,cAACqU,GAAD,CAASnL,QAASA,EAASC,WAAW,OAAOE,OAAQA,EAAQD,aAAcA,EAAcU,KAAMrM,KAAKqM,cARrF/M,0TCfjB,IAAMkd,GAAgB7d,IAAH8d,wICAnB,OAAMC,GAAgB/d,IAAHge,MCWpBnD,GAAO,CACZvT,GAAI,GACJkW,MAAO,GACPpX,SAAU,GACV1F,KAAM,GACN+c,MAAO,GACPQ,eAAgB,CACf,CACCzJ,OAAQ,CACPvG,MAAO,MAIV0P,aAAc,EACdO,iBAAkB,CACjB,CACCjQ,MAAO,KAGTsJ,UAAW,GACXC,UAAW,IAoGGoF,GAjGdzc,EAAQ0d,GAAc,CACtBnd,KAAK,iBAELP,EAAQ4d,GAAc,CACtBrd,KAAK,iBAELqF,0NAEClE,MAAQ,CACNkX,MAAO,KACPC,WAAW,EACX/L,OAAQ4N,MAoEXzM,UAAY,SAACnB,GACZ9L,EAAKe,SAAS,CAAC+K,OAAQA,EAAQ+L,WAAW,OAW1CI,cAAgB,WACdjY,EAAK8B,MAAMkb,UAAU9b,UACrBlB,EAAKe,SAAS,CAAE8W,UAAW,KAAM/L,OAAQ4N,8EA/ElC,IAAA3R,EAAA7H,KAAAmF,EACuBnF,KAAK4B,MAA9Bkb,EADE3X,EACF2X,UADE3X,EACS4X,UACnB,OAAGD,EAAU9Z,QAELX,EAAAC,EAAAC,cAACkX,GAAA,EAAD,CAASzW,SAAO,EAACR,MAAO,CAACiG,OAAO,QAASE,MAAM,WAK7C,CACJtG,EAAAC,EAAAC,cAACmX,GAAD,CACJjY,IAAI,wBACJmL,MAAM,QACNlB,WAAW,OACXqB,UAAW,WAAOlF,EAAKhH,SAAS,CAAC8W,WAAW,MAE5CtV,EAAAC,EAAAC,cAAC4V,GAAD,CACCtH,SAAU,CACT,QACA,OACA,QACA,OACA,aACA,cAED9O,KAAM+a,EAAU/B,MAAMhgB,IAAI,SAAAgH,GACzB,MAAO,CACNqW,GAAIrW,EAAKkE,GACT+W,MAAOjb,EAAKoa,MACZc,SAAUlb,EAAKgD,SACfmY,KAAMnb,EAAK1C,KACX8d,MAAOpb,EAAKqa,MACZgB,KAAMrb,EAAKma,KAAOna,EAAKma,KAAKK,UAAY,KACxCc,cAAetb,EAAK6a,eACpBU,YAAavb,EAAKua,aAClBiB,gBAAiBxb,EAAK8a,iBAAmB9a,EAAK8a,iBAAiB9hB,IAAI,SAAAmgB,GAAa,OAAOA,EAAStO,QAAQvE,KAAK,MAAQ,KACrH8Q,UAAW,IAAIvY,KAAKmB,EAAKmU,WACzBkD,UAAW,IAAIxY,KAAKmB,EAAKoU,cAG3BrF,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAClCb,iBAAkB,CAAC,GACnBH,mBAAoB,CAAC,CAAE7N,MAAO,EAAG2O,GAAI,SAAC7O,GAAU8F,EAAKkF,UAAU+P,EAAU/B,MAAMrK,OAAO,SAAA8I,GAAU,OAAOA,EAAKvT,KAAOlE,EAAKqW,KAAK,OAC7H/H,cAAe,CAAC,EAAG,GACnBC,gBAAiB,CAChB,CACCrO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,KAGxB,CACCO,MAAO,EACP2O,GAAI,SAAAlP,GACH,OAAOgM,GAAIC,WAAWjM,SAO1B1B,KAAK+Z,uDAQU,IAAApU,EACc3F,KAAKQ,MAA3BoL,EADQjG,EACRiG,OACR,IAFgBjG,EACAgS,UACE,OAAO,KAFT,IAIRoF,EAAc/c,KAAK4B,MAAnBmb,UACR,OAAO1a,EAAAC,EAAAC,cAACib,GAAD,CAAW/b,IAAI,aAAamK,OAAQA,EAAQH,QAASzL,KAAK+X,cAAeiE,MAAOe,EAAUf,eAjF/E1c,4BCPLme,GCTA,WACb,OAD6Czf,UAAAiB,OAAA,QAAAC,IAAAlB,UAAA,IAAAA,UAAA,GACtC,SAA0BsB,GAAW,IAAAC,EAAAC,EAAAC,EA0D1C,OAzDCX,kBAAQiI,GAAwB,CAAE1H,KAAM,QADCK,CAAAH,EAEzCmF,aAFyCjF,EAAAD,EAAA,SAAAG,GAAA,SAAA+d,IAAA,OAAAzhB,OAAA8D,EAAA,EAAA9D,CAAA+D,KAAA0d,GAAAzhB,OAAAoE,EAAA,EAAApE,CAAA+D,KAAA/D,OAAAqE,EAAA,EAAArE,CAAAyhB,GAAA3f,MAAAiC,KAAAhC,YAAA,OAAA/B,OAAAsF,EAAA,EAAAtF,CAAAyhB,EAAA/d,GAAA1D,OAAAuF,EAAA,EAAAvF,CAAAyhB,EAAA,EAAAjc,IAAA,wBAAAC,MAAA,SAqBlBG,GAIpB,QAAI7B,KAAK4B,MAAM4X,KAAKA,OAAS3X,EAAU2X,KAAKA,QAzBN,CAAA/X,IAAA,SAAAC,MAAA,WA+B/B,IAAAyD,EAC8BnF,KAAK4B,MAAlC8I,EADDvF,EACCuF,SAAUiT,EADXxY,EACWwY,SAAUnE,EADrBrU,EACqBqU,KAC5B,QAAkBta,IAAdsa,EAAKA,KAAoB,CAC3B,GAAIA,EAAKxW,QACP,OAAO,KAGT,IAAiB,IAAb2a,EACF,OAAO,KAGT,IAAMxiB,EAAOqe,EAAKA,KAAO,OAAS,QAElC,OACEnX,EAAAC,EAAAC,cAACqb,GAAA,EAAD,CACEtV,GAAI,CACFqC,SAAQ,IAAAnP,OAAML,GACdqF,MAAO,CAAE/D,KAAMiO,MAMvB,OAAOrI,EAAAC,EAAAC,cAACjD,EAAcU,KAAK4B,WAtDW8b,EAAA,CAGnBra,IAAM/D,WAHaE,EAIjC8D,YAJiC,YAAA9H,OAIP8D,EAAUgE,aACzChE,EAAUD,KAL4B,KAAAE,EAAAE,KAAAF,ODQ/Bke,GApBI,SAAC7b,EAADtH,GAAuBA,EAAbqM,OACzB,OAAK/E,EAAM4X,KAAKxW,SAAYpB,EAAM4X,KAAKM,GAIvCzX,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEqb,SAAU,SAAUpV,OAAQ,QAASC,gBAAiB,cAAgBN,UAAU,aAC5F/F,EAAAC,EAAAC,cAACgI,GAAW3I,GACZS,EAAAC,EAAAC,cAACub,EAAA,EAAD,CAAQtb,MAAO,CAACiG,OAAQ,SACtBpG,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,IAAK4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAACqb,GAAA,EAAD,CAAUtV,GAAG,aACnDjG,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,QAAS4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAACyb,GAASpc,MACpDS,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,SAAU4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAAC0b,GAAUrc,MACtDS,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,WAAY4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAAC2b,GAAYtc,MAC1DS,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,SAAU4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAAC2b,GAAYtc,MACxDS,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,aAAc4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAAC4b,GAAcvc,MAC9DS,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,SAAU4iB,OAAQ,kBAAM1b,EAAAC,EAAAC,cAAC6b,GAAUxc,MACtDS,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOE,UAAWG,OAbb5E,EAAAC,EAAAC,cAACqb,GAAA,EAAD,CAAUtV,GAAI,CAAEqC,SAAU,SAAU9F,OAAQjD,EAAM8I,cEJ1C2T,oLAEjB,OACEhc,EAAAC,EAAAC,cAAC+b,EAAA,EAAD,KACEjc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACub,EAAA,EAAD,KACEzb,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOC,OAAK,EAAC1L,KAAM,SAAU2L,UAAWJ,KACxCrE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAOzL,KAAM,IAAK2L,UAAWyX,eAPLjf,aCLrBkf,oLAJX,OAAOnc,EAAAC,EAAAC,cAACkc,GAAD,aAFOnf,aCOZof,GAAcC,QACW,cAA7Bvd,OAAOsJ,SAASkU,UAEe,UAA7Bxd,OAAOsJ,SAASkU,UAEhBxd,OAAOsJ,SAASkU,SAASrF,MACvB,2DAsCN,SAASsF,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT7d,KAAK,SAAAie,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5e,QACfue,UAAUC,cAAcO,WAK1BnkB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB6F,MAAM,SAAA7G,GACLe,QAAQf,MAAM,4CAA6CA,KCpEjEd,EAAQ,KAAUC,OAAO,cAEzB,IAAIgmB,GACFnd,EAAAC,EAAAC,cAACkd,EAAA,eAAD,CAAgBC,OAAQA,GACtBrd,EAAAC,EAAAC,cAACod,GAAD,OAIJC,IAAS7B,OAAOyB,GAAazgB,SAAS8gB,eAAe,SDCtC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwB3e,OAAOsJ,UAC3CsV,SAAW5e,OAAOsJ,SAASsV,OAIvC,OAGF5e,OAAO6e,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAAtjB,OAAMukB,GAAN,sBAEPrB,IAiDV,SAAiCI,GAE/BoB,MAAMpB,GACH7d,KAAK,SAAAkf,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAAStkB,QAAQwkB,IAAI,gBAAgBne,QAAQ,cAG7C6c,UAAUC,cAAcsB,MAAMrf,KAAK,SAAAie,GACjCA,EAAaqB,aAAatf,KAAK,WAC7BG,OAAOsJ,SAAS8V,aAKpB3B,GAAgBC,KAGnB5d,MAAM,WACL9F,QAAQC,IACN,mEArEAolB,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAMrf,KAAK,WACjC7F,QAAQC,IACN,+GAMJwjB,GAAgBC,MC5BxB4B","file":"static/js/main.40392f1b.chunk.js","sourcesContent":["export const AUTH_TOKEN_NAME = 'earth_guardians_auth';\r\n","import { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { ApolloClient } from 'apollo-boost';\r\nimport { ApolloLink } from 'apollo-link';\r\nimport { split } from 'apollo-link';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { onError } from 'apollo-link-error';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { RetryLink } from 'apollo-link-retry';\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { getFragmentDefinitions, getMainDefinition } from 'apollo-utilities';\r\nimport { SubscriptionClient } from 'subscriptions-transport-ws';\r\nimport { AUTH_TOKEN_NAME } from './consts';\r\nrequire('dotenv').config('../../.env');\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: 'https://egdemobackend.herokuapp.com/'\r\n});\r\n\r\nconst retryLink = new RetryLink({\r\n  delay: {\r\n    initial: 300,\r\n    max: Infinity,\r\n    jitter: true\r\n  },\r\n  attempts: {\r\n    max: 3,\r\n    retryIf: (error, { query }) => {\r\n      const { operation } = getMainDefinition(query);\r\n      return operation === 'query';\r\n    }\r\n  }\r\n});\r\n\r\n// // const subscriptionClient = new SubscriptionClient(\r\n// //   process.env.REACT_APP_GRAPHQL_SUBSCRIPTION_URL,\r\n// //   {\r\n// //     inactivityTimeout: 0,\r\n// //     reconnect: true,\r\n// //     timeout: 30000\r\n// //   }\r\n// // );\r\n\r\nconst errorLink = onError(({ graphQLErrors, networkError, operation }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.map(({ message, locations, path }) => {\r\n      console.log(\r\n        'multiple errors',\r\n        JSON.stringify({ message, locations, path })\r\n      );\r\n      return message;\r\n    });\r\n  }\r\n\r\n  if (networkError) {\r\n    console.log(`Network error: ${networkError}`);\r\n  }\r\n});\r\n\r\n// // const wsLink = new WebSocketLink(subscriptionClient);\r\n\r\n// wsLink,\r\nconst authLink = setContext((_, context) => {\r\n  const { headers } = context;\r\n  const token = localStorage.getItem(AUTH_TOKEN_NAME);\r\n  return {\r\n    ...context,\r\n    headers: {\r\n      ...headers,\r\n      authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n});\r\n\r\nexport default new ApolloClient({\r\n  ssrForceFetchDelay: 100,\r\n  link: ApolloLink.from([authLink, errorLink, retryLink, httpLink]),\r\n  connectToDevTools: true,\r\n  cache: new InMemoryCache()\r\n});\r\n","import { css } from 'styled-components';\r\n\r\n// Breakpoint Config\r\nexport const responsiveSizes = {\r\n  mobileS: '320px',\r\n  mobileM: '375px',\r\n  mobileL: '425px',\r\n  phablet: '600px',\r\n  tablet: '768px',\r\n  laptop: '1024px',\r\n  laptopL: '1440px',\r\n  desktop: '2560px',\r\n};\r\n\r\nconst _mediaQueryGenerator = (sizes, type) => {\r\n  return Object.keys(sizes).reduce((acc, label) => {\r\n    acc[label] = (...args) => css`\r\n      @media (${type}: ${sizes[label]}) {\r\n        ${css(...args)}\r\n      }\r\n    `;\r\n    \r\n    return acc;\r\n  }, {});\r\n};\r\n\r\n// Media Template\r\nexport const minWidthMediaQuery = _mediaQueryGenerator(responsiveSizes, 'min-width');\r\nexport const maxWidthMediaQuery = _mediaQueryGenerator(responsiveSizes, 'max-width');\r\n","export const layout = {\r\n    fontFamily: 'mercury text g1 a,mercury text g1 b,mercury text g1,Helvetica,Arial,open sans,sans-serif'\r\n}","// import { images } from '../../constants/images';\r\nimport { layout } from '../../constants/layout';\r\n// import { colors } from '../../constants/colors';\r\n\r\nexport const styles = {\r\n    linkText: {\r\n        lineHeight: 1.5,\r\n        display: 'block',\r\n        fontStyle: 'italic',\r\n        cursor: 'pointer',\r\n        fontFamily: layout.fontFamily\r\n      },\r\n};\r\n","import gql from \"../../../node_modules/graphql-tag\";\r\n\r\nexport const LoginMutation = gql`\r\n\tmutation Login($username: String!, $password: String!) {\r\n\t\tlogin(username: $username, password: $password) {\r\n\t\ttoken\r\n\t\tuser {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n","import { getMainDefinition } from 'apollo-utilities';\r\nimport React from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { Button, Icon, Message } from 'semantic-ui-react';\r\n\r\nconst refetches = [];\r\n\r\nexport default function(document, operationOptions = {}) {\r\n  const { kind, operation } = getMainDefinition(document);\r\n\r\n  if (kind !== 'OperationDefinition' || operation !== 'query') {\r\n    return graphql(document, operationOptions);\r\n  }\r\n\r\n  const name = operationOptions.name || 'data';\r\n\r\n  return function componentWrapper(Component) {\r\n    @graphql(document, operationOptions)\r\n    class MyGraphQL extends React.Component {\r\n      static displayName = `MyGraphQL(${Component.displayName ||\r\n        Component.name})`;\r\n\r\n      state = {\r\n        fetching: false\r\n      };\r\n\r\n      componentWillMount() {\r\n        this._addRefetch(this.props);\r\n      }\r\n\r\n      componentWillUpdate(nextProps) {\r\n        this._removeRefetch(this.props);\r\n        this._addRefetch(nextProps);\r\n      }\r\n\r\n      componentWillUnmount() {\r\n        this._removeRefetch(this.props);\r\n      }\r\n\r\n      _addRefetch(props) {\r\n        const data = props[name];\r\n\r\n        if (!data) {\r\n          return;\r\n        }\r\n\r\n        refetches.push(data.refetch);\r\n      }\r\n\r\n      _removeRefetch(props) {\r\n        const data = props[name];\r\n\r\n        if (!data) {\r\n          return;\r\n        }\r\n\r\n        const index = refetches.indexOf(data.refetch);\r\n        if (index >= 0) {\r\n          refetches.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      render() {\r\n        const data = this.props[name];\r\n\r\n        if (data && data.error) {\r\n          return this._renderError(data.error);\r\n        }\r\n\r\n        return <Component {...this.props} />;\r\n      }\r\n\r\n      _renderError(error) {\r\n        const { fetching } = this.state;\r\n\r\n        return (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Message negative compact>\r\n              <p>{error.message}</p>\r\n              <Button\r\n                primary\r\n                fluid\r\n                loading={fetching}\r\n                disabled={fetching}\r\n                onClick={this._refetch}\r\n              >\r\n                <Icon name=\"refresh\" size=\"large\" />Retry\r\n              </Button>\r\n            </Message>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      _refetch = () => {\r\n        const start = new Date();\r\n        this.setState({ fetching: true });\r\n        Promise.all(refetches.map(refetch => refetch()))\r\n          .then(() => {\r\n            this.setState({ fetching: false });\r\n          })\r\n          .catch(() => {\r\n            const end = new Date();\r\n            const diff = end - start;\r\n            window.setTimeout(() => {\r\n              this.setState({ fetching: false });\r\n            }, Math.max(0, 500 - diff));\r\n          });\r\n      };\r\n    }\r\n\r\n    return MyGraphQL;\r\n  };\r\n}\r\n","export const colors = {\r\n    yellow: '#FFDD38',\r\n    darkGray: '#2C2C2C',\r\n    lightGray: '#D8D8D8',\r\n    darkBlue: '#2B6C99'\r\n}","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { minWidthMediaQuery } from \"../../constants/responsive\";\r\nimport styled from \"styled-components\";\r\nimport { styles } from \"./styles\";\r\nimport {\r\n  Checkbox,\r\n  Button,\r\n  Header,\r\n  Input,\r\n  Modal\r\n} from \"semantic-ui-react/dist/commonjs\";\r\nimport { LoginMutation } from \"../../graphql/mutations/login_mutation\";\r\nimport graphql from \"../../hoc/graphql\";\r\nimport { AUTH_TOKEN_NAME } from \"../../consts\";\r\nimport { colors } from \"../../constants/colors\";\r\nimport { layout } from '../../constants/layout';\r\n\r\nconst LoginContainer = styled.div`\r\n  \r\n`;\r\n\r\nconst LoginMenu = styled.div`\r\n \r\n`;\r\n\r\nLoginMenu.TextHeader = styled.h2`\r\n \r\n`;\r\n\r\nLoginMenu.LoginForm = styled.div`\r\n  \r\n`;\r\n\r\nconst { LoginForm } = LoginMenu;\r\n\r\nLoginForm.InputContainer = styled.div`\r\n\r\n`;\r\n\r\nLoginForm.Input = styled(Input)`\r\n \r\n`;\r\n\r\nLoginForm.LoginButton = styled(Button)`\r\n \r\n`;\r\n\r\n@graphql(LoginMutation, {\r\n  name: \"login\"\r\n})\r\n@withRouter\r\nclass Login extends Component {\r\n\tstatic propTypes = {\r\n\t\thistory: PropTypes.object.isRequired,\r\n\t\tlogin: PropTypes.func.isRequired\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\trememberMe: false,\r\n\t\tloading: false,\r\n\t\terror: null\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { loading, error } = this.state;\r\n\t\treturn (\r\n\t\t<LoginContainer>\r\n\t\t\t<LoginMenu.LoginForm>\r\n\t\t\t\t<LoginMenu.TextHeader>\r\n\t\t\t\tLog into your Earth Guardians Account\r\n\t\t\t\t</LoginMenu.TextHeader>\r\n\t\t\t\t<LoginForm.InputContainer>\r\n\t\t\t\t\t<LoginForm.Input\r\n\t\t\t\t\ttype=\"username\"\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\tplaceholder=\"username\"\r\n\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<LoginForm.Input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</LoginForm.InputContainer>\r\n\t\t\t\t<LoginForm.LoginButton loading={loading} onClick={this.handleLogin}>\r\n\t\t\t\t\tLog In\r\n\t\t\t\t</LoginForm.LoginButton>\r\n\r\n\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tid=\"rememberMe\"\r\n\t\t\t\t\t\tchecked={this.state.rememberMe}\r\n\t\t\t\t\t\tonChange={this.toggleRememberMe}\r\n\t\t\t\t\t\tstyle={{ paddingTop: \"7px\", paddingBottom: \"20px\", fontFamily: layout.fontFamily }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label style={{color: 'white', fontSize: '14px', fontFamily: 'inherit', marginLeft: '5px'}}>Remember Me</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a style={styles.linkText}>Forgot your password?</a>\r\n\t\t\t\t<a style={styles.linkText}>Need to create an account?</a>\r\n\t\t\t</LoginMenu.LoginForm>\r\n\t\t</LoginContainer>\r\n\t\t);\r\n\t}\r\n\r\n\t//Saves the username and password input to the component's state.\r\n\thandleInputChange = event => {\r\n\t\tif (event.target.name === 'username') {\r\n\t\t  this.setState({\r\n\t\t\tusername: event.target.value\r\n\t\t  });\r\n\t\t} else {\r\n\t\t  this.setState({\r\n\t\t\tpassword: event.target.value\r\n\t\t  });\r\n\t\t}\r\n\t  };\r\n\t\r\n\t  //Saves rememberMe input to the component's state.\r\n\t  toggleRememberMe = () => {\r\n\t\tthis.setState({\r\n\t\t  rememberMe: !this.state.rememberMe\r\n\t\t});\r\n\t  };\r\n\t\r\n\t  handleLogin = () => {\r\n\t\tconst { history, login } = this.props;\r\n\t\tconst { loading } = this.state;\r\n\t\tthis.setState({ loading: !loading });\r\n\t\tconst variables = {\r\n\t\t  username: this.state.username,\r\n\t\t  password: this.state.password\r\n\t\t};\r\n\t\tlogin({ variables })\r\n\t\t  .then(res => {\r\n\t\t\tif (res.data.login.token) {\r\n\t\t\t  let token = res.data.login.token;\r\n\t\t\t  localStorage.setItem(AUTH_TOKEN_NAME, token);\r\n\t\t\t  history.push('/home');\r\n\t\t\t  // console.error('there was an error inside then and token');\r\n\t\t\t} else {\r\n\t\t\t  console.error('there was an error inside .then');\r\n\t\t\t  this.setState({ loading: !false });\r\n\t\t\t}\r\n\t\t  })\r\n\t\t  .catch(err => {\r\n\t\t\tconsole.error('there was an error inside error', JSON.stringify(err));\r\n\t\t\tlet errmsg =\r\n\t\t\t  err.graphQLErrors.length > 0\r\n\t\t\t\t? err.graphQLErrors[0].message\r\n\t\t\t\t: 'There was a network error, please try again!';\r\n\t\t\tthis.setState({ loading: false, error: errmsg });\r\n\t\t  });\r\n\t  };\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Login from '../components/LoginComponent';\r\nimport styled from 'styled-components';\r\n\r\nconst LoginLayoutContainer = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n`;\r\n\r\nconst LoginLayout = ({ routes }) => (\r\n  <LoginLayoutContainer>\r\n    <Route exact path={'/login'} component={Login} />\r\n  </LoginLayoutContainer>\r\n);\r\n\r\nexport default LoginLayout;","import gql from '../../../node_modules/graphql-tag';\r\n\r\nexport const GET_CURRENT_USER_QUERY = gql`\r\n  {\r\n    me {\r\n      id\r\n      name\r\n      role {\r\n        role_name\r\n      }\r\n    }\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport { Header, Container } from 'semantic-ui-react';\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <Container textAlign=\"center\" style={{ paddingTop: '25%' }}>\r\n      <Header as=\"h1\">Page Not Found</Header>\r\n      <Header as=\"h2\">404</Header>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n// import { minWidthMediaQuery } from '../../constants/responsive';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 100vw;\r\n  height: 95vh;\r\n  margin-top: 5vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  background-color: black;\r\n`;\r\n\r\n// ${minWidthMediaQuery.laptopL`\r\n//     flex-direction: row;\r\n//     font-size: 250% !important;\r\n//   `}\r\n\r\n@withRouter class Home extends Component {\r\n  state = {\r\n    count: 0\r\n  };\r\n\r\n  render(){\r\n    const {count} = this.state;\r\n    return (\r\n      <HomeContainer>\r\n        <DropdownSection text=\"Actions\" drop={count >= 1} backgroundImage='https://humandesign.com/wp-content/uploads/2018/11/Ladder-Grab-6.jpg' path=\"/actions\"></DropdownSection>\r\n        <DropdownSection text=\"Games\" drop={count >= 2} backgroundImage='https://humandesign.com/wp-content/uploads/2018/04/VTS_03.jpg' path=\"/games\"></DropdownSection>\r\n        <DropdownSection text=\"Petitions\" drop={count >= 3} backgroundImage='https://humandesign.com/wp-content/uploads/2018/04/3.jpg' path=\"/petitions\"></DropdownSection>\r\n        <DropdownSection text=\"Users\" drop={count >= 4} backgroundImage='https://humandesign.com/wp-content/uploads/2018/03/BFH_PDP_Hero_01-1.jpg' path=\"/users\"></DropdownSection>\r\n      </HomeContainer>\r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    let count = 1;\r\n    let interval = setInterval(() => {\r\n      if(count <= 4){\r\n        this.setState({\r\n          count\r\n        })\r\n        count++;\r\n      } else{\r\n        clearInterval(interval);\r\n      }\r\n    }, 300);\r\n  }\r\n}\r\n\r\nconst DropdownSection = props => {\r\n  const componentClasses = ['home-third-section'];\r\n  if(props.drop === true) componentClasses.push('drop');\r\n  return (\r\n    <NavLink className={componentClasses.join(' ')} style={{backgroundImage: `url(${props.backgroundImage}` || '', color: 'black'}} to={props.path}>\r\n      <div style={{fontSize: '4vw', fontWeight: 900, display: props.drop === true ? 'block' : 'none'}}>{props.text}</div>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default Home;","import { colors } from '../../constants/colors';\r\n\r\nexport const styles = {\r\n  navbar: {\r\n    height: '5vh',\r\n    backgroundColor: colors.darkGray,\r\n    width: '100vw',\r\n    position: 'fixed',\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'stretch',\r\n    justifyContent: 'space-between',\r\n    zIndex: 999\r\n  },\r\n\r\n  navbarIcon: {\r\n    color: colors.lightGray,\r\n  },\r\n\r\n  navbarLink: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n\r\n  navbarText: {\r\n    color: colors.lightGray,\r\n    paddingTop: '.425rem',\r\n    paddingBottom: '.425rem',\r\n  },\r\n\r\n  // navbarBrand: {\r\n  //   paddingLeft: '.5625rem',\r\n  //   paddingRight: '.5625rem',\r\n  //   paddingTop: '1.5rem'\r\n  // },\r\n\r\n  navbarMenu: {\r\n    height: '100%',\r\n    backgroundColor: colors.darkGray,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  subNav: {\r\n    left: '4.125rem',\r\n    backgroundColor: '#E7E7E7'\r\n  },\r\n\r\n  subNavIcon: {\r\n    verticalAlign: 'middle',\r\n    marginRight: '.3125rem'\r\n  },\r\n\r\n  subMenu: {\r\n    backgroundColor: '#D7D7D7',\r\n    boxShadow: 'none',\r\n    border: 'none'\r\n  },\r\n\r\n  activeSubMenu: {\r\n    backgroundColor: '#D7D7D7'\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Menu, Dropdown } from 'semantic-ui-react';\r\nimport { NavLink } from 'react-router-dom';\r\n// import MaterialIcon from '../shared/Icon';\r\nimport {styles} from './styles';\r\nimport { AUTH_TOKEN_NAME } from '../../consts';\r\nimport styled from 'styled-components';\r\nimport { colors } from '../../constants/colors';\r\n\r\n// function NavbarBrand({ onClick }) {\r\n//   return (\r\n//     <Menu.Item onClick={onClick} style={{ ...styles.navbarBrand }}>\r\n//       LogoHere\r\n//     </Menu.Item>\r\n//   );\r\n// }\r\n\r\nfunction AccountCircleMenuItem({ name, history }) {\r\n  const trigger = (\r\n    <Item className=\"item\">\r\n        <i>Account</i>\r\n    </Item>\r\n  );\r\n\r\n  const options = [\r\n    {\r\n      key: 'sign-out',\r\n      text: 'Sign Out',\r\n      icon: 'sign out',\r\n      onClick: () => {\r\n        localStorage.removeItem(AUTH_TOKEN_NAME);\r\n        history.push('/login');\r\n      }\r\n    },\r\n    // {\r\n    //   key: 'profile_info',\r\n    //   text: 'Profile',\r\n    //   icon: 'user',\r\n    //   onClick: () => {\r\n    //     history.push('/settings/profile');\r\n    //   }\r\n    // }\r\n  ];\r\n\r\n  return (\r\n    <Dropdown\r\n      trigger={trigger}\r\n      options={options}\r\n      pointing=\"right\"\r\n      icon={null}\r\n      style={{display: 'flex', flexDirection: 'column', justifyContent: 'center'}}\r\n    />\r\n  );\r\n}\r\n\r\nconst Item = styled.div`\r\n\tcolor: ${colors.lightGray} !important;\r\n\tpaddingTop: .425rem;\r\n\tpaddingBottom: .425rem;\r\n`\r\n\r\nexport default function NavBar(props) {\r\n//   console.log('props inside of navbar function', props);\r\n//   const { onBrandClick } = props;\r\n  return <div style={styles.navbar}>\r\n      <Menu borderless fluid style={styles.navbarMenu}>\r\n        {/* <NavbarBrand onClick={onBrandClick} /> */}\r\n        <NavLink to=\"/home\" style={styles.navbarLink}>\r\n          <div className=\"item\" style={styles.navbarText}>\r\n            LogoHere\r\n          </div>\r\n        </NavLink>\r\n        <div style={{ width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n          <NavLink to=\"/actions\" style={{ ...styles.navbarLink, ...{ display: props.location.pathname === \"/home\" ? \"none\" : \"flex\" } }}>\r\n            <Item className=\"item\">\r\n              <i>Actions</i>\r\n            </Item>\r\n          </NavLink>\r\n          <NavLink to=\"/games\" style={{ ...styles.navbarLink, ...{ display: props.location.pathname === \"/home\" ? \"none\" : \"flex\" } }}>\r\n            <Item className=\"item\">\r\n              <i>Games</i>\r\n            </Item>\r\n          </NavLink>\r\n          <NavLink to=\"/petitions\" style={{ ...styles.navbarLink, ...{ display: props.location.pathname === \"/home\" ? \"none\" : \"flex\" } }}>\r\n\t\t  <Item className=\"item\">\r\n              <i>Petitions</i>\r\n            </Item>\r\n          </NavLink>\r\n          <NavLink to=\"/users\" style={{ ...styles.navbarLink, ...{ display: props.location.pathname === \"/home\" ? \"none\" : \"flex\" } }}>\r\n\t\t  <Item className=\"item\">\r\n              <i>Users</i>\r\n            </Item>\r\n          </NavLink>\r\n          <AccountCircleMenuItem name=\"Account\" history={props.history} style={{ height: \"100%\" }} />\r\n        </div>\r\n      </Menu>\r\n    </div>;\r\n}\r\n","import React from 'react';\r\nimport './outline-icons.css';\r\n\r\nexport default function MaterialIcon({\r\n  size = 'small',\r\n  name,\r\n  outline,\r\n  ...rest\r\n}) {\r\n  const sizes = {\r\n    tiny: 'md-18',\r\n    small: 'md-24',\r\n    medium: 'md-36',\r\n    large: 'md-48'\r\n  };\r\n  const sizeClass = sizes[size];\r\n\r\n  let icon;\r\n\r\n  if (outline) {\r\n    icon = (\r\n      <i\r\n        className={`outline-${name} material-icons-outline outline-${sizeClass}`}\r\n        {...rest}\r\n      />\r\n    );\r\n  } else {\r\n    icon = (\r\n      <i className={`material-icons ${sizeClass}`} {...rest}>\r\n        {name}\r\n      </i>\r\n    );\r\n  }\r\n\r\n  return icon;\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Modal,\r\n  Header,\r\n  Button,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\n\r\nclass EGModal extends Component {\r\n  state = {\r\n    loading: false,\r\n    value: ''\r\n  };\r\n  \r\n  render() {\r\n    const { value } = this.state;\r\n    const { entityType, entity, modalContent } = this.props;\r\n    return <Modal open closeIcon onClose={this._onClose}>\r\n        <Header icon=\"archive\" content={`Add/Edit ${entityType}`} />\r\n        <Modal.Content>\r\n            {modalContent}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"red\" onClick={this._onClose}>\r\n            <Icon name=\"remove\" /> Cancel\r\n          </Button>\r\n          <Button color=\"green\" onClick={() => {\r\n              this._saveMutation();\r\n            }}>\r\n            <Icon name=\"remove\" /> Save\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>;\r\n  }\r\n\r\n  _saveMutation(newValue) {\r\n    const { save } = this.props;\r\n    this.setState({ loading: true });\r\n    // const variables = {\r\n    //   value: newValue\r\n    // };\r\n    // save({ variables }).then(result => {\r\n    //   if (result) {\r\n    //     this._onClose();\r\n    //   }\r\n    // });\r\n\r\n    save();\r\n  }\r\n\r\n  _onClose = () => {\r\n    const { onClose } = this.props;\r\n    if (onClose) {\r\n      onClose();\r\n    }\r\n  };\r\n}\r\n\r\nexport default EGModal;","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Header, Container, Button } from \"semantic-ui-react/dist/commonjs\";\r\nimport MaterialIcon from \"../shared/Icon\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst AddBtnContainer = styled.div`\r\n  margin: 0;\r\n  display: flex;\r\n  flexdirection: row;\r\n  justifycontent: flex-end;\r\n  alignitems: center;\r\n`;\r\n\r\nexport default class HeaderWithAddBtn extends Component {\r\n    render() {\r\n      const { title, entityType, openModal, style } = this.props;\r\n      return (\r\n          <HeaderContainer style={style}>\r\n            <Header as=\"h1\" style={{ margin: 0 }}>\r\n              {this.getTitleText(title)}\r\n            </Header>\r\n            <AddBtnContainer>\r\n              <Button\r\n                primary\r\n                onClick={openModal}\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-between\",\r\n                  fontSize: \"16px\"\r\n                }}\r\n              >\r\n                <MaterialIcon name=\"add\" />\r\n                New {entityType}\r\n              </Button>\r\n            </AddBtnContainer>\r\n          </HeaderContainer>\r\n      );\r\n    }\r\n    getTitleText = (title) => {\r\n      const {clickable, onClick} = this.props;\r\n      if(clickable){\r\n        return (\r\n          <a\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={onClick}\r\n          >\r\n          {title}\r\n        </a>\r\n        )\r\n      } else{\r\n        return title;\r\n      }\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Header, Container, Button } from \"semantic-ui-react/dist/commonjs\";\r\nimport MaterialIcon from \"../shared/Icon\";\r\nimport EGModal from \"../shared/Modals/Modal\";\r\nimport HeaderWithAddBtn from '../shared/HeaderWithAddBtn';\r\n\r\nconst PageContainer = styled.div`\r\n  width: 100vw;\r\n  height: auto;\r\n  min-height: 95vh;\r\n  max-height: 95vh;\r\n  margin-top: 5vh;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  background-color: white;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst AddBtnContainer = styled.div`\r\n  margin: 0;\r\n  display: flex;\r\n  flexdirection: row;\r\n  justifycontent: flex-end;\r\n  alignitems: center;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport default class ManagementView extends Component {\r\n  render() {\r\n    const { children, title, entityType, openModal } = this.props;\r\n    return (\r\n      <PageContainer>\r\n        <HeaderWithAddBtn title={title} entityType={entityType} openModal={openModal} />\r\n          <hr />\r\n        <ContentContainer>\r\n          {children}\r\n        </ContentContainer>\r\n      </PageContainer>\r\n    );\r\n  }\r\n}\r\n","export const lib = {\r\n\tformatTime(date) {\r\n\t\tdate = date && date.toString().substring(date.length - 1) === 'Z' ? new Date(date) : date;\r\n\t\tif(typeof date === 'object'){\r\n\t\t\tconst monthNames = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'];\r\n\t\t\tconst yy = date.getFullYear();\r\n\t\t\tconst MM = monthNames[date.getMonth()];\r\n\t\t\tconst dd = date.getDate();\r\n\t\t\tlet hh = date.getHours();\r\n\t\t\tconst tt = hh >= 12 ? 'PM' : 'AM';\r\n\t\t\thh = hh === 0 ? 12 : hh;\r\n\t\t\thh = hh > 12 ? hh - 12 : hh;\r\n\t\t\tlet mm = date.getMinutes();\r\n\t\t\tmm = (mm < 10) ? '0' + mm : mm;\r\n\t\t\treturn `${MM} ${dd}, ${yy} - ${hh}:${mm} ${tt}`;\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\t\r\n\t  },\r\n\t\r\n\t//Helper function to tell whether a value exists in an\r\n\t//array or not. This is because IE does not\r\n\t//support Array.includes().\r\n\tarrayIncludes(array, value) {\r\n\t\tif (Array.isArray(array)) {\r\n\t\treturn array.some(arrayValue => {\r\n\t\t\treturn arrayValue === value;\r\n\t\t});\r\n\t\t} else {\r\n\t\treturn false;\r\n\t\t}\r\n\t},\r\n\r\n\ttrueFalseToYesNo(value){\r\n\t\treturn value ? 'Yes' : 'No';\r\n\t},\r\n\r\n\ttruncateText(text, length){\r\n\t\tif(text.length > length){\r\n\t\t\treturn `${text.substring(0, length - 1)}...`;\r\n\t\t} else{\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Table as SUITable } from 'semantic-ui-react';\r\nimport to from 'to-case';\r\nimport { colors } from '../../constants/colors';\r\nimport { lib } from '../../lib/Lib';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { maxWidthMediaQuery } from '../../constants/responsive';\r\n\r\nconst Table = styled(SUITable)`\r\n  /* https://css-tricks.com/responsive-data-tables/ */\r\n\r\n  ${({ collapsable }) => collapsable && maxWidthMediaQuery.tablet`\r\n      table, thead, tbody, th, td, tr { \r\n        display: block; \r\n      }\r\n      \r\n      thead tr { \r\n        position: absolute;\r\n        top: -9999px;\r\n        left: -9999px;\r\n      }\r\n      \r\n      tr { border: 1px solid #ccc; }\r\n      \r\n      td { \r\n        display: flex;\r\n        justify-content: space-between;\r\n        border: none;\r\n        border-bottom: 1px solid #eee; \r\n        position: relative;\r\n        padding-left: 50%; \r\n      }\r\n\r\n      td.mobile-center {\r\n        justify-content: center;\r\n      }\r\n\r\n      td:before { \r\n        width: 45%; \r\n        padding-right: 10px; \r\n        white-space: nowrap;\r\n      }\r\n      \r\n      ${({ cellHeaderTitles }) => cellHeaderTitles.map((title, i) => `\r\n        td:nth-of-type(${i + 1}):before {\r\n          content: \"${to.title(title)}\";\r\n          font-weight: bold;\r\n        }\r\n      `)}\r\n  `}\r\n`;\r\n\r\n@withRouter\r\nclass EGTable extends React.Component {\r\n  static propTypes = {\r\n    collapsable: PropTypes.bool,\r\n    editable: PropTypes.bool,\r\n    edit: PropTypes.func,\r\n  }\r\n  \r\n  componentWillReceiveProps(nextProps){\r\n    this.setState({\r\n      data: nextProps.data\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      headings,\r\n      data,\r\n      style,\r\n      leftAlignColumns,\r\n      editable,\r\n      edit,\r\n      collapsable\r\n    } = this.props;\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{ ...styles.container, ...style }}\r\n      >\r\n        <Table celled unstackable collapsable={collapsable} /*cellHeaderTitles={headings}*/>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              {headings.map(heading => (\r\n                <Table.HeaderCell\r\n                  style={{ color: colors.darkBlue }}\r\n                  key={`${heading.replace(/\\s/g, '')}-heading`}\r\n                >\r\n                  {heading}\r\n                </Table.HeaderCell>\r\n              ))}\r\n              {editable && <Table.HeaderCell />}\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {data.map((rowItem, rowIndex) => (\r\n              <Table.Row key={`row-${rowIndex}`}>\r\n                {headings.map((fieldName, columnIndex) => {\r\n                  return (\r\n                    <Table.Cell\r\n                      style={{\r\n                        textAlign: lib.arrayIncludes(\r\n                          leftAlignColumns,\r\n                          columnIndex\r\n                        )\r\n                          ? 'left'\r\n                          : 'right'\r\n                      }}\r\n                      key={`${fieldName}-${columnIndex}`}\r\n                    >\r\n                      {this.getContent(rowItem, fieldName, columnIndex)}\r\n                    </Table.Cell>\r\n                  );\r\n                })}\r\n                {editable && (\r\n                  <Table.Cell\r\n                    className=\"mobile-center\"\r\n                    style={{ color: colors.darkBlue, cursor: 'pointer' }}\r\n                    onClick={() => edit(rowItem.ID)}\r\n                  >\r\n                    Edit\r\n                  </Table.Cell>\r\n                )}\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleHyperlinkClick = (rowItem, columnIndex) => {\r\n    const hyperlinkFunction = this.getColumnFunction(\r\n      this.props.hyperlinkFunctions,\r\n      columnIndex\r\n    );\r\n    if (hyperlinkFunction) {\r\n      hyperlinkFunction(rowItem);\r\n    }\r\n  };\r\n\r\n  //Returns either a hyperlink or plain text to the cell depending\r\n  //on whether or not this column has been specified as a\r\n  //hyperlink. Hyperlinks will be given the onClick function that\r\n  //was passed in.\r\n  getContent = (rowItem, fieldName, index) => {\r\n    const { history } = this.props;\r\n    //Is this a hyperlink column?\r\n    if(lib.arrayIncludes(this.props.hyperlinkColumns, index)){\r\n      return (\r\n        <a\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => {\r\n            this.handleHyperlinkClick(rowItem, index);\r\n          }}\r\n        >\r\n          {this.getText(rowItem, fieldName, index)}\r\n        </a>\r\n      )\r\n\r\n    } else{\r\n      return (\r\n        this.getText(rowItem, fieldName, index)\r\n      )\r\n    }\r\n  };\r\n\r\n  //Checks to see if this cell's column has been specified for\r\n  //special formatting. If so, it applies it using the formatting\r\n  //function that was passed in.\r\n  getText = (rowItem, fieldName, columnIndex) => {\r\n    const value = rowItem[fieldName.replace(/\\s/g, '')];\r\n    let formatFunction;\r\n    \r\n    if (lib.arrayIncludes(this.props.formatColumns, columnIndex)) {\r\n      \r\n      formatFunction = this.getColumnFunction(\r\n        this.props.formatFunctions,\r\n        columnIndex\r\n      );\r\n      if (formatFunction) {\r\n        return formatFunction(value);\r\n      } else {\r\n\r\n        return value;\r\n      }\r\n    } else {\r\n        if(typeof value === 'boolean'){\r\n            return lib.trueFalseToYesNo(value);\r\n        } else{\r\n            return value;\r\n        }\r\n    }\r\n  };\r\n\r\n  //Returns the passed in function for the specific cell index\r\n  //from the array of handlerObjects passed in.\r\n  getColumnFunction = (handlerObjects, cellIndex) => {\r\n    \r\n    const getHandlerObj = cellObj => {\r\n      return cellObj.index === cellIndex;\r\n    };\r\n\r\n    const handlerObj = handlerObjects.filter(getHandlerObj)[0];\r\n    return handlerObj ? handlerObj.fn : null;\r\n  };\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    height: 'auto'\r\n  },\r\n  header: {\r\n    fontFamily: ['Open Sans', 'sans-serif'],\r\n    fontSize: '0.9rem',\r\n    lineHeight: '24px',\r\n    letterSpacing: '1.5%',\r\n    color: colors.darkBlue\r\n  }\r\n};\r\n\r\nexport default EGTable;\r\n","import React from \"react\";\r\nimport { Input } from \"semantic-ui-react/dist/commonjs\";\r\n\r\nconst EGTextBox = props => (\r\n\t<Input\r\n\t\tfluid\r\n\t\tvalue={props.value}\r\n\t\tlabel={props.label}\r\n\t\tplaceholder={props.label}\r\n\t\tonChange={event => {props.onChange(event)}}\r\n\t\tstyle={{ marginBottom: \"5px\" }}\r\n\t/>\r\n)\r\n  \r\nexport default EGTextBox;","import React from \"react\";\r\nimport { TextArea } from \"semantic-ui-react/dist/commonjs\";\r\n\r\nconst EGTextArea = props => (\r\n\t<div className=\"ui fluid labeled input\" style={{ display: \"flex\", flexDirection: \"row\", marginBottom: \"5px\" }}>\r\n\t\t<strong className=\"ui label label\">{props.label}</strong>\r\n\t\t<TextArea\r\n\t\t\tonChange={event => {props.onChange(event)}}\r\n\t\t\tvalue={props.value}\r\n\t\t\tlabel={props.label}\r\n\t\t\tstyle={styles.textArea}\r\n\t\t/>\r\n\t</div>\r\n);\r\n  \r\nexport default EGTextArea;\r\n\r\nconst styles = {\r\n\ttextArea: {\r\n\t\tflex: 1,\r\n\t\tborder: \"1px solid rgba(34,36,38,.15)\",\r\n\t\tborderLeftColor: \"transparent\",\r\n\t\tborderBottomRightRadius: \".28571429rem\",\r\n\t\tborderTopRightRadius: \".28571429rem\",\r\n\t\tpaddingTop: \"0.678571em\",\r\n\t\tpaddingRight: \"1em\",\r\n\t\tpaddingBottom: \"0.678571em\",\r\n\t\tpaddingLeft: \"1em\"\r\n\t  },\r\n}","import React from \"react\";\r\nimport { Checkbox } from \"semantic-ui-react/dist/commonjs\";\r\n\r\nconst EGCheckbox = props => (\r\n\t<div style={{display: 'flex', flexDirection: 'row', marginBottom: '5px'}}>\r\n\t\t<strong>{props.label}</strong>\r\n\t\t<Checkbox\r\n\t\t\tchecked={props.value}\r\n\t\t\tonChange={event => {props.onChange(event)}}\r\n\t\t\tstyle={{marginLeft: '5px'}}\r\n\t\t\tlabel=''\r\n\t\t/>\r\n\t</div>\r\n)\r\n  \r\nexport default EGCheckbox;","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { lib } from '../../../lib/Lib';\r\n\r\n@withRouter\r\nclass EGDropdown extends React.Component {\r\n    state = {\r\n        options: convertToUsableObject(this.props.options),\r\n        currentValues: this.props.currentValues || [],\r\n        addingOption: false\r\n    }\r\n\r\n    //Handles a newly selected value.\r\n    handleChange = (e, { value }) => {\r\n        let time = 0;\r\n        const optionAdditionCheck = setInterval(() => {\r\n            if(!this.state.addingOption){\r\n                const { multiple } = this.props;\r\n                clearInterval(optionAdditionCheck);\r\n                const valueChange = multiple ? getValueChange(this.state.currentValues, value, this.props.id) : {'action': 'change', 'value' : value};\r\n                \r\n                this.setState({ currentValues: value }, () => {\r\n                //If a callback to update values was given, call it.\r\n                if (this.props.onChange) {\r\n                    this.props.onChange(valueChange);\r\n                }\r\n                });\r\n            }\r\n        }, 50);\r\n    }\r\n\r\n    //Always update with the next props.\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            options: convertToUsableObject(nextProps.options),\r\n            currentValues: nextProps.currentValues\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { currentValues, options, addingOption } = this.state\r\n        const { label, multiple } = this.props;\r\n        return (\r\n            <div className=\"ui fluid labeled input\" style={{display: 'flex', flexDirection: 'row', marginBottom: '5px'}}>\r\n\t\t\t\t<strong className=\"ui label label\" style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>{label}</strong>\r\n                {multiple ? \r\n                <Dropdown\r\n                    options={options}\r\n                    placeholder={label || 'Select an Option'}\r\n                    search\r\n                    selection\r\n                    fluid\r\n                    multiple\r\n                    value={currentValues}\r\n                    onChange={this.handleChange}\r\n                    disabled={addingOption}\r\n                    style={styles.dropdown}\r\n                /> :\r\n                <Dropdown\r\n                    options={options}\r\n                    placeholder={label || 'Select an Option'}\r\n                    search\r\n                    selection\r\n                    fluid\r\n                    value={currentValues}\r\n                    onChange={this.handleChange}\r\n                    disabled={addingOption}\r\n                    style={styles.dropdown}\r\n                />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Options must have a key, text, and value. If the object doesn't\r\n//have either of the three, it will use the value to populate the others.\r\n//Good for arrays of strings.\r\nconst convertToUsableObject = values => {\r\n    if(Array.isArray(values) && values[0]){\r\n      if(values[0].key && values[0].text && values[0].value){\r\n          return values;\r\n      } else{\r\n          return values.map(value => {\r\n              return {\r\n                  key: value.key || value,\r\n                  text: value.text || value,\r\n                  value: value.value || value\r\n              }\r\n          })\r\n      }\r\n    } else{\r\n        return [];\r\n    }\r\n}\r\n\r\n//Finds the diff between two arrays and returns an object with\r\n//what occurred. Example: (action: 'add', value: 'cool', id: 5)\r\nconst getValueChange = (array1, array2, id) => {\r\n\r\n    var array = []\r\n\r\n    for (var i = 0; i < array1.length; i++) {\r\n        array[array1[i]] = true;\r\n    }\r\n\r\n    for (var i = 0; i < array2.length; i++) {\r\n        if (array[array2[i]]) {\r\n            delete array[array2[i]];\r\n        } else {\r\n            array[array2[i]] = true;\r\n        }\r\n    }\r\n\r\n    const newValue = Object.keys(array)[0]\r\n\r\n    if(lib.arrayIncludes(array1, newValue)){\r\n        return {action: 'remove', value : newValue, id: id};\r\n    } else{\r\n        return {action: 'add', value: newValue, id: id}\r\n    }\r\n}\r\n\r\nexport default EGDropdown;\r\n\r\nconst styles = {\r\n    dropdown: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        border: \"1px solid rgba(34,36,38,.15)\",\r\n        borderLeftColor: \"transparent\",\r\n        borderBottomRightRadius: \".28571429rem\",\r\n        borderTopRightRadius: \".28571429rem\",\r\n        paddingTop: '0.22619em',\r\n        paddingRight: '2.1em',\r\n        paddingBottom: '0.22619em',\r\n        paddingLeft: '0.357143em'\r\n      }\r\n}","import gql from \"../../../node_modules/graphql-tag\";\r\n\r\nexport const CreateActionMutation = gql`\r\n  mutation CreateAction(\r\n    $primary_image: String\r\n    $active: Boolean\r\n    $short_description: String!\r\n    $action_taken_description: String!\r\n    $schedule: Schedule\r\n    $video_url: String\r\n    $carbon_dioxide: Float\r\n    $water: Float\r\n    $waste: Float\r\n    $points: Int\r\n    $external_url: String\r\n    $isGame: Boolean\r\n    $author_id: ID!\r\n    $category_id: ID!\r\n  ) {\r\n    createAction(\r\n      data: {\r\n        primary_image: $primary_image\r\n        active: $active\r\n        short_description: $short_description\r\n        action_taken_description: $action_taken_description\r\n        schedule: $schedule\r\n        video_url: $video_url\r\n        carbon_dioxide: $carbon_dioxide\r\n        water: $water\r\n        waste: $waste\r\n        points: $points\r\n        external_url: $external_url\r\n        isGame: $isGame\r\n        author: { connect: { id: $author_id } }\r\n        category: { connect: { id: $category_id } }\r\n      }\r\n    ) {\r\n      id\r\n      short_description\r\n    }\r\n  }\r\n`;\r\n","import gql from \"../../../node_modules/graphql-tag\";\r\n\r\nexport const UpdateActionMutation = gql`\r\n    mutation UpdateAction(\r\n        $id: ID!\r\n        $primary_image: String\r\n        $active: Boolean\r\n        $short_description: String!\r\n        $action_taken_description: String!\r\n        $schedule: Schedule\r\n        $video_url: String\r\n        $carbon_dioxide: Float\r\n        $order: Int\r\n        $water: Float\r\n        $waste: Float\r\n        $points: Int\r\n        $external_url: String\r\n        $isGame: Boolean\r\n        $relatedActionIds: [ActionWhereUniqueInput!]\r\n        $relatedActionIdsToRemove: [ActionWhereUniqueInput!]\r\n    ) {\r\n    updateAction(\r\n        where: {\r\n            id: $id\r\n        },\r\n        data: {\r\n            primary_image: $primary_image\r\n            active: $active\r\n            short_description: $short_description\r\n            action_taken_description: $action_taken_description\r\n            schedule: $schedule\r\n            video_url: $video_url\r\n            carbon_dioxide: $carbon_dioxide\r\n            order: $order\r\n            water: $water\r\n            waste: $waste\r\n            points: $points\r\n            external_url: $external_url\r\n            isGame: $isGame\r\n            related_actions: {\r\n                connect: $relatedActionIds\r\n                disconnect: $relatedActionIdsToRemove\r\n            }\r\n        }\r\n    ) {\r\n      id\r\n      short_description\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\n// import { ADD_GROUP_MUTATION } from '../../../graphql/mutations/add_group';\r\nimport graphql from \"../../hoc/graphql\";\r\nimport { lib }from '../../lib/Lib';\r\nimport EGModal from \"../shared/Modals/Modal\";\r\nimport EGTextBox from '../shared/Inputs/EGTextBox';\r\nimport EGTextArea from '../shared/Inputs/EGTextArea';\r\nimport EGCheckbox from '../shared/Inputs/EGCheckbox';\r\nimport EGDropdown from '../shared/Inputs/EGDropdown';\r\nimport { CreateActionMutation } from '../../graphql/mutations/createAction_mutation';\r\nimport { UpdateActionMutation } from '../../graphql/mutations/updateAction_mutation';\r\n\r\n@graphql(CreateActionMutation, {\r\n\tname: 'createAction'\r\n  })\r\n@graphql(UpdateActionMutation, {\r\n\tname: 'updateAction'\r\n  })\r\nclass ActionModal extends Component {\r\n\tstate = {\r\n        entity: this.props.entity,\r\n        initialRelatedActionIds: this.props.entity.related_actions.map(action => { return action.id })\r\n\t}\r\n\trender() {\r\n\t\tconst { entity } = this.state;\r\n\t\tconst { entityType, onClose } = this.props;\r\n        const modalContent = this.getContent();\r\n\t\treturn <EGModal onClose={onClose} entityType={entityType} entity={entity} modalContent={modalContent} save={this.save}/>;\r\n\t}\r\n\r\n\tsave = () =>{\r\n        const {onClose, createAction, updateAction} = this.props;\r\n        const {entity, initialRelatedActionIds} = this.state;\r\n        const variables = entity;\r\n        variables.water = parseFloat(variables.water);\r\n        variables.waste = parseFloat(variables.waste);\r\n        variables.carbon_dioxide = parseFloat(variables.carbon_dioxide);\r\n        variables.points = parseInt(variables.points);\r\n        variables.order = parseInt(variables.order);\r\n\r\n        // console.log('Saving Entity: ', entity);\r\n        if(entity.id){\r\n            const selectedIds = variables.related_actions.map(action => {return action.id});\r\n            variables.relatedActionIdsToRemove = initialRelatedActionIds.filter(initialActionId => {\r\n                return !lib.arrayIncludes(selectedIds, initialActionId);\r\n            }).map(actionId => {return {id: actionId}});\r\n            variables.relatedActionIds = variables.related_actions.map(action => {return {id: action.id}});\r\n            updateAction({variables}).then(res => {\r\n                onClose();\r\n            })\r\n        } else{\r\n            createAction({variables}).then(res => {\r\n                onClose();\r\n            })\r\n        }\r\n    }\r\n    \r\n    getContent = () => {\r\n        const { entity } = this.state;\r\n        const { relatedActionsOptions, entityType} = this.props;\r\n        return entityType === 'Action' ? \r\n        [\r\n            <EGTextArea key={'short-desc-input'}     value={entity.short_description || ''} label={'Short Description'} onChange={(event) => {this.updateEntity(event, 'short_description')}} />, \r\n            <EGTextBox  key={'order-input'}          value={entity.order}                   label={'Order'}             onChange={(event) => {this.updateEntity(event, 'order')}} />,\r\n            <EGDropdown key={'schedule-input'} currentValues={entity.schedule || scheduleOptions[0]} options={scheduleOptions} label={'Schedule'} onChange={(event) => {this.updateSchedule(event)}} />,\r\n            <EGTextBox  key={'carbon_dioxide-input'} value={entity.carbon_dioxide || ''}    label={'Carbon Dioxide'}    onChange={(event) => {this.updateEntity(event, 'carbon_dioxide')}}/>, \r\n            <EGTextBox  key={'water-input'}          value={entity.water || ''}             label={'Water'}             onChange={(event) => {this.updateEntity(event, 'water')}} />,\r\n            <EGTextBox  key={'waste-input'}          value={entity.waste || ''}             label={'Waste'}             onChange={(event) => {this.updateEntity(event, 'waste')}} />,\r\n            <EGTextBox  key={'points-input'}         value={entity.points || ''}            label={'Points'}            onChange={(event) => {this.updateEntity(event, 'points')}} />,\r\n            <EGTextBox  key={'primary-image-input'}  value={entity.primary_image || ''}     label={'Primary Image'}     onChange={(event) => {this.updateEntity(event, 'primary_image')}} />,\r\n            <EGTextBox  key={'video-input'}          value={entity.video_url || ''}             label={'Video'}             onChange={(event) => {this.updateEntity(event, 'video_url')}} />,\r\n            <EGTextBox  key={'external-url-input'}   value={entity.external_url || ''}      label={'External URL'}      onChange={(event) => {this.updateEntity(event, 'external_url')}} />,\r\n            <EGDropdown key={'related-actions-input'} currentValues={entity.related_actions ? entity.related_actions.map(action => {return action.id}) : []} label={'Games'} multiple={true} options={this.toDropdownOptions(relatedActionsOptions, 'short_description')} onChange={(event) => { this.updateRelatedActions(event);}} />,\r\n            <EGCheckbox key={'isGame-input'}         value={entity.isGame}            label={'Game'}              onChange={(event) => {this.updateEntityBoolean(event, 'isGame')}} />,\r\n            <EGCheckbox key={'active-input'}         value={entity.active}            label={'Active'}            onChange={(event) => {this.updateEntityBoolean(event, 'active')}} />,\r\n            <div key='author'><strong style={{marginRight: '5px'}}>Author:</strong>{entity.author.name || ''}</div>,\r\n            <div key='created-at'><strong style={{marginRight: '5px'}}>Created At:</strong>{`${lib.formatTime(entity.createdAt)}`}</div>,\r\n            <div key='updated-at'><strong style={{marginRight: '5px'}}>Updated At:</strong>{`${lib.formatTime(entity.updatedAt)}`}</div>\r\n        ] :\r\n        [\r\n            <EGTextArea key={'short-desc-input'}     value={entity.short_description || ''} label={'Short Description'} onChange={(event) => {this.updateEntity(event, 'short_description')}} />, \r\n            <EGTextBox  key={'order-input'}          value={entity.order}                   label={'Order'}             onChange={(event) => {this.updateEntity(event, 'order')}} />,\r\n            <EGDropdown key={'schedule-input'} currentValues={entity.schedule || scheduleOptions[0]} options={scheduleOptions} label={'Schedule'} onChange={(event) => {this.updateSchedule(event)}} />,\r\n            <EGTextBox  key={'carbon_dioxide-input'} value={entity.carbon_dioxide || ''}    label={'Carbon Dioxide'}    onChange={(event) => {this.updateEntity(event, 'carbon_dioxide')}} />, \r\n            <EGTextBox  key={'water-input'}          value={entity.water || ''}             label={'Water'}             onChange={(event) => {this.updateEntity(event, 'water')}} />,\r\n            <EGTextBox  key={'waste-input'}          value={entity.waste || ''}             label={'Waste'}             onChange={(event) => {this.updateEntity(event, 'waste')}} />,\r\n            <EGTextBox  key={'points-input'}         value={entity.points || ''}            label={'Points'}            onChange={(event) => {this.updateEntity(event, 'points')}} />,\r\n            <EGTextBox  key={'primary-image-input'}  value={entity.primary_image || ''}     label={'Primary Image'}     onChange={(event) => {this.updateEntity(event, 'primary_image')}} />,\r\n            <EGTextBox  key={'video-input'}          value={entity.video_url || ''}             label={'Video'}             onChange={(event) => {this.updateEntity(event, 'video_url')}} />,\r\n            <EGTextBox  key={'external-url-input'}   value={entity.external_url || ''}      label={'External URL'}      onChange={(event) => {this.updateEntity(event, 'external_url')}} />,\r\n            <EGCheckbox key={'isGame-input'}         value={entity.isGame}            label={'Game'}              onChange={(event) => {this.updateEntityBoolean(event, 'isGame')}} />,\r\n            <EGCheckbox key={'active-input'}         value={entity.active}            label={'Active'}            onChange={(event) => {this.updateEntityBoolean(event, 'active')}} />,\r\n            <div key='author'><strong style={{marginRight: '5px'}}>Author:</strong>{entity.author.name || ''    }</div>,\r\n            <div key='created-at'><strong style={{marginRight: '5px'}}>Created At:</strong>{`${lib.formatTime(entity.createdAt)}`}</div>,\r\n            <div key='updated-at'><strong style={{marginRight: '5px'}}>Updated At:</strong>{`${lib.formatTime(entity.updatedAt)}`}</div>\r\n        ]\r\n    }\r\n\r\n    updateEntity = (event, propName) => {\r\n        const { entity } = this.state;\r\n        if (event.target.value !== entity[propName]) {\r\n            let newEntity = Object.assign({}, entity);\r\n            newEntity[propName] = event.target.value;\r\n        this.setState({ entity: newEntity });\r\n        }\r\n    }\r\n\r\n    updateEntityBoolean = (event, propName) => {\r\n        const { entity } = this.state;\r\n        let newEntity = Object.assign({}, entity);\r\n\t\tnewEntity[propName] = !newEntity[propName];\r\n\t\tthis.setState({ entity: newEntity });\r\n    }\r\n\r\n    updateRelatedActions = (event) => {\r\n        const { entity } = this.state;\r\n        const { relatedActionsOptions } = this.props;\r\n        let newEntity = Object.assign({}, entity);\r\n        if(event.action === 'add'){\r\n            const selectedAction = relatedActionsOptions.filter(action => { return action.id === event.value})[0];\r\n            const actionPreviouslySelected = entity.related_actions ? entity.related_actions.some(action => {return action.id === event.value;}) : false;\r\n            if(!actionPreviouslySelected){\r\n                newEntity.related_actions.push(selectedAction);\r\n            }\r\n        } else{\r\n            let actionIndex;\r\n            newEntity.related_actions.some((action, i) => {\r\n                if(action.id === event.value){\r\n                    actionIndex = i\r\n                    return true;\r\n                }\r\n            })\r\n            newEntity.related_actions.splice(actionIndex, 1);\r\n        }\r\n\r\n        this.setState({ entity: newEntity });\r\n    }\r\n\r\n    updateSchedule = (event) => {\r\n        const { entity } = this.state;\r\n        if (event.action && event.value) {\r\n            let newEntity = Object.assign({}, entity);\r\n            newEntity.schedule = event.value;\r\n        this.setState({ entity: newEntity });\r\n        }\r\n    }\r\n\r\n    toDropdownOptions = (list, textProp) =>  {\r\n        return list.map(item => {\r\n            return {\r\n                key: item.id,\r\n                value: item.id,\r\n                text: item[textProp]\r\n            }\r\n        }) || [];\r\n    }\r\n}\r\n\r\nexport default ActionModal;\r\n\r\nconst scheduleOptions = [\r\n    'ANYTIME',\r\n    'ONCE',\r\n    'DAILY',\r\n    'BIWEEKLY',\r\n    'WEEKLY',\r\n    'TWOWEEKS',\r\n    'MONTHLY',\r\n    'QUARTERLY',\r\n    'SEMIANNUALLY',\r\n    'ANNUALLY'\r\n]","import gql from \"../../../node_modules/graphql-tag\";\r\n\r\nexport const CreateCategoryMutation = gql`\r\n  mutation CreateCategory(\r\n    $name: String!\r\n    $primary_image: String\r\n    $video_id: String\r\n  ) {\r\n    createActionCategory(\r\n      data: { name: $name, primary_image: $primary_image, video_id: $video_id }\r\n    ) {\r\n      id\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import gql from '../../../node_modules/graphql-tag';\r\n\r\nexport const UpdateCategoryMutation = gql`\r\n  mutation UpdateCategory(\r\n      $id: ID!,\r\n      $name: String!\r\n      $primary_image: String,\r\n      $video_id: String,\r\n      ) {\r\n    updateActionCategory(where: {\r\n        id: $id\r\n    },\r\n        data: {\r\n        name: $name,\r\n\t\tprimary_image: $primary_image,\r\n        video_id: $video_id\r\n    }) {\r\n        id\r\n        name\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport graphql from \"../../hoc/graphql\";\r\nimport { lib }from '../../lib/Lib';\r\nimport EGModal from \"../shared/Modals/Modal\";\r\nimport EGTextBox from '../shared/Inputs/EGTextBox';\r\nimport { CreateCategoryMutation } from '../../graphql/mutations/createCategory_mutation';\r\nimport { UpdateCategoryMutation } from '../../graphql/mutations/updateCategory_mutation';\r\n\r\n@graphql(CreateCategoryMutation, {\r\n\tname: 'createCategory'\r\n  })\r\n@graphql(UpdateCategoryMutation, {\r\n\tname: 'updateCategory'\r\n  })\r\nclass CategoryModal extends Component {\r\n\tstate = {\r\n\t\tentity: this.props.entity\r\n\t}\r\n\trender() {\r\n\t\tconst { entity } = this.state;\r\n\t\tconst { onClose } = this.props;\r\n        const modalContent = this.getContent();\r\n\t\treturn <EGModal onClose={onClose} entityType='Category' entity={entity} modalContent={modalContent} save={this.save}/>;\r\n\t}\r\n\r\n\tsave = () =>{\r\n\t\tconst {onClose, createCategory, updateCategory} = this.props;\r\n        const {entity} = this.state;\r\n        const variables = entity;\r\n        \r\n        variables.order = parseInt(variables.order);\r\n        // console.log('Saving Entity: ', entity);\r\n        if(entity.id){\r\n            updateCategory({variables}).then(res => {\r\n                onClose();\r\n            });\r\n        } else{\r\n            createCategory({variables}).then(res => {\r\n                onClose();\r\n            });\r\n        }\r\n    }\r\n    \r\n    getContent = () => {\r\n        const { entity } = this.state;\r\n        return [\r\n            <EGTextBox key={'name-input'}           value={entity.name || ''}             label={'Name'}          onChange={(event) => {this.updateEntity(event, 'name')}} />,\r\n            <EGTextBox key={'primary-image-input'}  value={entity.primary_image || ''}    label={'Primary Image'} onChange={(event) => {this.updateEntity(event, 'primary_image')}} />,\r\n            <EGTextBox key={'video-id-input'}       value={entity.video_id || ''}         label={'Video Id'}      onChange={(event) => {this.updateEntity(event, 'video_id')}} />,\r\n            <div key='actions'><strong style={{marginRight: '5px'}}>Actions:</strong>{entity.actions.filter(action => {return action.isGame === false}).map(action => {return lib.truncateText(action.short_description, 50)}).join(', ')}</div>,\r\n            <div key='games'><strong style={{marginRight: '5px'}}>Games:</strong>{entity.actions.filter(action => {return action.isGame === true}).map(action => {return lib.truncateText(action.short_description, 50)}).join(', ')}</div>,\r\n            <div key='created-at'><strong style={{marginRight: '5px'}}>Created At:</strong>{`${lib.formatTime(entity.createdAt)}`}</div>,\r\n            <div key='updated-at'><strong style={{marginRight: '5px'}}>Updated At:</strong>{`${lib.formatTime(entity.updatedAt)}`}</div>\r\n        ]\r\n\r\n    }\r\n\r\n    updateEntity = (event, propName) => {\r\n        const { entity } = this.state;\r\n        if (event.target.value !== entity[propName]) {\r\n            let newEntity = Object.assign({}, entity);\r\n            newEntity[propName] = event.target.value;\r\n            this.setState({ entity: newEntity });\r\n        }\r\n    }\r\n}\r\n\r\nexport default CategoryModal;","import gql from 'graphql-tag';\r\n\r\nexport const GET_ALL_ACTIONS_CATEGORIES = gql`\r\n  {\r\n    actionCategories{\r\n      id\r\n      name\r\n      primary_image\r\n      video_id\r\n      createdAt\r\n      updatedAt\r\n      actions {\r\n        id\r\n        primary_image\r\n        active\r\n        short_description\r\n        action_taken_description\r\n        schedule\r\n        video_url\r\n        carbon_dioxide\r\n        order\r\n        water\r\n        waste\r\n        points\r\n        external_url\r\n        author {\r\n          name\r\n        }\r\n        related_actions{\r\n          id\r\n          short_description\r\n        }\r\n        isGame\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n    \r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ManagementView from '../shared/ManagementView';\r\nimport { maxWidthMediaQuery } from '../../constants/responsive';\r\nimport EGTable from '../shared/Table';\r\nimport {lib} from '../../lib/Lib';\r\nimport HeaderWithAddBtn from '../shared/HeaderWithAddBtn';\r\nimport ActionModal from './ActionModal';\r\nimport CategoryModal from './CategoryModal';\r\nimport {\r\n\tModal,\r\n\tHeader,\r\n\tButton,\r\n\tIcon,\r\n\tLabel,\r\n\tInput,\r\n\tSegment,\r\n\tDimmer\r\n  } from 'semantic-ui-react';\r\nimport graphql from '../../hoc/graphql';\r\nimport { GET_ALL_ACTIONS_CATEGORIES} from '../../graphql/queries/allActions';\r\nconst category = {\r\n  id: '',\r\n  name: '',\r\n  primary_image: '',\r\n  video_id: '',\r\n  actions: [],\r\n  createdAt: '',\r\n  updatedAt: ''\r\n}\r\n\r\nconst action = {\r\n  id: '',\r\n  category: {\r\n    id: '',\r\n    name: '',\r\n    actions: [],\r\n    createdAt: '',\r\n    updatedAt: ''\r\n  },\r\n  order: '',\r\n  primary_image: '',\r\n  active: false,\r\n  short_description: '',\r\n  action_taken_description: '',\r\n  schedule: 'ANYTIME',\r\n  video_url: '',\r\n  carbon_dioxide: 0.0,\r\n  water: 0.0,\r\n  waste: 0.0,\r\n  points: 0,\r\n  external_url: '',\r\n  isGame: false,\r\n  related_actions: [],\r\n  author: {\r\n\t  name: ''\r\n  },\r\n  createdAt: '',\r\n  updatedAt: ''\r\n}\r\n\r\n@withRouter\r\n@graphql(GET_ALL_ACTIONS_CATEGORIES, {\r\n\tname:\"all_actions_by_category\"\r\n})\r\nclass Actions extends Component {\r\n  state = {\r\n    modal: null,\r\n    modalOpen: false,\r\n\tentity: category,\r\n\tentityType: 'Category'\r\n  };\r\n\r\n  render() {\r\n\tconst { all_actions_by_category, user } = this.props;\r\n\tif(all_actions_by_category.loading){\r\n\t\treturn <Segment loading style={{height:'100vh', width:'100vw'}}></Segment>\r\n\t}\r\n\t// console.log('all categories', all_actions_by_category.actionCategories)\r\n    return [\r\n      \t<ManagementView\r\n\t\t\tkey='actions-management-view'\r\n      \t\ttitle={this.isGameView() ? 'Games' : \"Actions\"} \r\n      \t\tentityType=\"Category\"\r\n\t\t\topenModal={() => {this.setState({modalOpen: true, entity: category, entityType: 'Category'})}}\r\n\t\t\tstyle={{overflowY: 'auto'}}\r\n      \t>\r\n\t\t  {\r\n\t\t\t  all_actions_by_category.actionCategories.map(cat => {\r\n\t\t\t\t\tif(this.isGameView()){\r\n\t\t\t\t\t\taction.isGame = true;\r\n\t\t\t\t\t}\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<Segment key={`${cat.name.replace(/\\s/g, '')}-category`}>\r\n\t\t\t\t\t\t<HeaderWithAddBtn\r\n\t\t\t\t\t\t\ttitle={cat.name}\r\n\t\t\t\t\t\t\tclickable={true}\r\n\t\t\t\t\t\t\tonClick={() => {this.setState({modalOpen: true, entity: cat, entityType: 'Category'})}}\r\n\t\t\t\t\t\t\tentityType={this.isGameView() ? 'Game' : 'Action'}\r\n\t\t\t\t\t\t\topenModal={() => {\r\n\t\t\t\t\t\t\t\taction.category_id = cat.id;\r\n\t\t\t\t\t\t\t\taction.author_id = user.me.id;\r\n\t\t\t\t\t\t\t\taction.category = cat;\r\n\t\t\t\t\t\t\t\tthis.setState({modalOpen: true, entity: action, entityType: this.isGameView() ? 'Game' : 'Action', selectedCategory: cat})\r\n\t\t\t\t\t\t\t}} \r\n\t\t\t\t\t\t\tstyle={{marginBottom: '10px'}} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{this.getTable(cat)}\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t)\r\n\t\t\t  })\r\n\t\t  }\r\n\t  </ManagementView>,\r\n\t  this._renderModal()\r\n\t\t];\r\n  }\r\n\r\n\topenModal = (entity, entityType, cat) => {\r\n\t\tentity.category_id = cat.id;\r\n\t\tthis.setState({entity: entity, modalOpen: true, entityType: entityType ? entityType : this.state.entityType, selectedCategory: cat})\r\n\t}\r\n\r\n  \t_renderModal() {\r\n\t\tconst { entity, modalOpen, entityType, selectedCategory } = this.state;\r\n\t\tif (!modalOpen) { return null }\r\n\r\n\tswitch(entityType){\r\n\t\tcase 'Category':\r\n\t\t\treturn <CategoryModal key=\"category-modal\" entity={entity} onClose={this._onCloseModal} />;\r\n\t\tcase 'Game':\r\n\t\t\tentity.order = entity.order !== undefined && entity.order !== null && entity.order !== '' ? entity.order : selectedCategory.actions.length + 1;\r\n\t\t\treturn <ActionModal key=\"game-modal\" entity={entity} entityType='Game' onClose={this._onCloseModal}/>\r\n\t\tcase 'Action':\r\n\t\t\tconst relatedActionsoptions = selectedCategory ? selectedCategory.actions.filter(action => { return action.isGame === true }) : [];\r\n\t\t\tentity.category_id = selectedCategory.id;\r\n\t\t\tentity.order = entity.order !== undefined && entity.order !== null && entity.order !== '' ? entity.order : selectedCategory.actions.length + 1;\r\n\t\t\tentity.related_actions = entity.related_actions || [];\r\n\t\t\tentity.isGame = false;\r\n\t\t\treturn <ActionModal key=\"action-modal\" entity={entity} entityType='Action' onClose={this._onCloseModal} relatedActionsOptions={relatedActionsoptions} />\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n  }\r\n\r\n  _onCloseModal = () => {\r\n    this.props.all_actions_by_category.refetch();\r\n    this.setState({ modalOpen: null, entity: category });\r\n  };\r\n\r\n  getTable = (cat) => {\r\n\t  \tfunction gamesFilter(action){return action.isGame === true;}\r\n\t\tfunction actionsFilter(action){return action.isGame === false;}\r\n\t\tif(this.isGameView()){\r\n\t\t\t// console.log('data inside of table', cat.actions);\r\n\t\t\treturn (\r\n\t\t\t\t<EGTable\r\n\t\t\t\t\theadings={[\r\n\t\t\t\t\t\t'Short Description',\r\n\t\t\t\t\t\t'Order',\r\n\t\t\t\t\t\t'Active',\r\n\t\t\t\t\t\t'Author',\r\n\t\t\t\t\t\t'Created At',\r\n\t\t\t\t\t\t'Updated At'\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tdata={cat.actions.filter(gamesFilter).map(data => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tId: data.id,\r\n\t\t\t\t\t\t\tCategory: data.category,\r\n\t\t\t\t\t\t\tOrder: data.order,\r\n\t\t\t\t\t\t\tPrimaryImage: data.primary_image,\r\n\t\t\t\t\t\t\tActive: data.active,\r\n\t\t\t\t\t\t\tShortDescription: data.short_description !== '' ? data.short_description : 'No Description',\r\n\t\t\t\t\t\t\tActionTakenDescription: data.action_taken_description,\r\n\t\t\t\t\t\t\tSchedule: data.schedule,\r\n\t\t\t\t\t\t\tVideoURL: data.video_url,\r\n\t\t\t\t\t\t\tCarbonDioxide: data.carbon_dioxide,\r\n\t\t\t\t\t\t\tWater: data.water,\r\n\t\t\t\t\t\t\tWaste: data.waste,\r\n\t\t\t\t\t\t\tExternalURL: data.external_url,\r\n\t\t\t\t\t\t\tIsGame: data.isGame,\r\n\t\t\t\t\t\t\tAuthor: data.author.name,\r\n\t\t\t\t\t\t\tCreatedAt: new Date(data.createdAt),\r\n\t\t\t\t\t\t\tUpdatedAt: new Date(data.updatedAt)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tleftAlignColumns={[0, 1, 2, 3, 4, 5]}\r\n\t\t\t\t\thyperlinkColumns={[0]}\r\n\t\t\t\t\thyperlinkFunctions={[\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\tindex: 0, \r\n\t\t\t\t\t\t\tfn: (data) => {\r\n\t\t\t\t\t\t\t\tconst entityType = this.isGameView() ? 'Game' : 'Action';\r\n\t\t\t\t\t\t\t\tthis.openModal(cat.actions.filter(item => {return item.id === data.Id})[0], entityType, cat)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tformatColumns={[4, 5]}\r\n\t\t\t\t\tformatFunctions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 4,\r\n\t\t\t\t\t\t\tfn: value => {\r\n\t\t\t\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 5,\r\n\t\t\t\t\t\t\tfn: value => {\r\n\t\t\t\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t} else{\r\n\t\t\t// console.log('not games');\r\n\t\t\treturn (\r\n\t\t\t\t<EGTable\r\n\t\t\t\t\theadings={[\r\n\t\t\t\t\t\t'Short Description',\r\n\t\t\t\t\t\t'Order',\r\n\t\t\t\t\t\t'Active',\r\n\t\t\t\t\t\t'Games',\r\n\t\t\t\t\t\t'Author',\r\n\t\t\t\t\t\t'Created At',\r\n\t\t\t\t\t\t'Updated At'\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tdata={cat.actions.filter(actionsFilter).map(data => {\r\n\t\t\t\t\t\t// console.log('data inside of table', cat.actions, data);\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tId: data.id,\r\n\t\t\t\t\t\t\tCategory: data.category,\r\n\t\t\t\t\t\t\tOrder: data.order,\r\n\t\t\t\t\t\t\tPrimaryImage: data.primary_image,\r\n\t\t\t\t\t\t\tActive: data.active,\r\n\t\t\t\t\t\t\tShortDescription: data.short_description !== '' ? data.short_description : 'No Description',\r\n\t\t\t\t\t\t\tActionTakenDescription: data.action_taken_description,\r\n\t\t\t\t\t\t\tSchedule: data.schedule,\r\n\t\t\t\t\t\t\tVideoURL: data.video_url,\r\n\t\t\t\t\t\t\tCarbonDioxide: data.carbon_dioxide,\r\n\t\t\t\t\t\t\tWater: data.water,\r\n\t\t\t\t\t\t\tWaste: data.waste,\r\n\t\t\t\t\t\t\tExternalURL: data.external_url,\r\n\t\t\t\t\t\t\tIsGame: data.isGame,\r\n\t\t\t\t\t\t\tRelatedActions: data.related_actions ? data.related_actions.map(act => {return lib.truncateText(act.short_description, 50)}).join(', ') : null,\r\n\t\t\t\t\t\t\tAuthor: data.author.name,\r\n\t\t\t\t\t\t\tCreatedAt: new Date(data.createdAt),\r\n\t\t\t\t\t\t\tUpdatedAt: new Date(data.updatedAt)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tleftAlignColumns={[0, 1, 2, 3, 4, 5, 6]}\r\n\t\t\t\t\thyperlinkColumns={[0]}\r\n\t\t\t\t\thyperlinkFunctions={[\r\n\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\tindex: 0, \r\n\t\t\t\t\t\t\tfn: (data) => {\r\n\t\t\t\t\t\t\t\tconst entityType = this.isGameView() ? 'Game' : 'Action';\r\n\t\t\t\t\t\t\t\tthis.openModal(cat.actions.filter(item => {return item.id === data.Id})[0], entityType, cat)\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t\tformatColumns={[5, 6]}\r\n\t\t\t\t\tformatFunctions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 5,\r\n\t\t\t\t\t\t\tfn: value => {\r\n\t\t\t\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 6,\r\n\t\t\t\t\t\t\tfn: value => {\r\n\t\t\t\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}\r\n\t  }\r\n\t  \r\n\t  isGameView = () => {\r\n\t\t  return this.props.match.path === '/games';\r\n\t  }\r\n}\r\n\r\nexport default Actions;","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nclass EGQuill extends Component {\r\n  \r\n    handleChange = (value) => {\r\n\t\tconst { onChange } = this.props;\r\n\t\tonChange({target: {value: value}})\r\n    }\r\n  \r\n    render() {\r\n\t\tconst {label, value} = this.props;\r\n      \treturn (\r\n\t\t\t<div className=\"ui fluid labeled input\" style={{ display: \"flex\", flexDirection: \"row\", marginBottom: \"5px\" }}>\r\n\t\t\t\t<strong className=\"ui label label\">{label}</strong>\r\n\t\t\t\t<ReactQuill value={value} onChange={this.handleChange} style={styles.quill} />\r\n\t\t\t</div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default EGQuill;\r\n\r\n  const styles = {\r\n\tquill: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tborder: \"1px solid rgba(34,36,38,.15)\",\r\n\t\tborderLeftColor: \"transparent\",\r\n\t\tborderBottomRightRadius: \".28571429rem\",\r\n\t\tborderTopRightRadius: \".28571429rem\",\r\n\t  },\r\n}","import gql from \"../../../node_modules/graphql-tag\";\r\n\r\nexport const CreatePetitionMutation = gql`\r\n\tmutation CreatePetition(\r\n\t\t$title: String!\r\n\t\t$active: Boolean\r\n\t\t$short_description: String!\r\n\t\t$body: String!\r\n\t\t$order: Int\r\n\t\t$primary_image: String\r\n\t\t$video_url: String\r\n\t\t$external_url: String\r\n\t\t$author_id: ID!\r\n\t) {\r\n\t\tcreatePetition(\r\n\t\t\tdata: {\r\n\t\t\t\ttitle: $title\r\n\t\t\t\tactive: $active\r\n\t\t\t\tshort_description: $short_description\r\n\t\t\t\tbody: $body\r\n\t\t\t\torder: $order\r\n\t\t\t\tprimary_image: $primary_image\r\n\t\t\t\tvideo_url: $video_url\r\n\t\t\t\texternal_url: $external_url\r\n\t\t\t\tauthor: { connect: { id: $author_id } }\r\n\t\t\t}\r\n\t\t) {\r\n\t\tid\r\n\t\ttitle\r\n\t\t}\r\n\t}\r\n`;\r\n","import gql from '../../../node_modules/graphql-tag';\r\n\r\nexport const UpdatePetitionMutation = gql`\r\n  mutation UpdatePetition(\r\n        $id: ID!\r\n        $title: String!\r\n\t\t$active: Boolean\r\n\t\t$short_description: String!\r\n\t\t$body: String!\r\n\t\t$order: Int\r\n\t\t$primary_image: String\r\n\t\t$video_url: String\r\n\t\t$external_url: String\r\n      ) {\r\n    updatePetition(where: {\r\n        id: $id\r\n    },\r\n        data: {\r\n            title: $title\r\n\t\t\tactive: $active\r\n\t\t\tshort_description: $short_description\r\n\t\t\tbody: $body\r\n\t\t\torder: $order\r\n\t\t\tprimary_image: $primary_image\r\n\t\t\tvideo_url: $video_url\r\n\t\t\texternal_url: $external_url\r\n    }) {\r\n        id\r\n        title\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\n// import { ADD_GROUP_MUTATION } from '../../../graphql/mutations/add_group';\r\nimport graphql from \"../../hoc/graphql\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { lib }from '../../lib/Lib';\r\nimport EGModal from \"../shared/Modals/Modal\";\r\nimport EGTextBox from '../shared/Inputs/EGTextBox';\r\nimport EGTextArea from '../shared/Inputs/EGTextArea';\r\nimport EGCheckbox from '../shared/Inputs/EGCheckbox';\r\nimport EGQuill from '../shared/Inputs/EGQuill';\r\nimport { CreatePetitionMutation } from '../../graphql/mutations/createPetition_mutation';\r\nimport { UpdatePetitionMutation } from '../../graphql/mutations/updatePetition_mutation';\r\n\r\n@graphql(CreatePetitionMutation, {\r\n\tname: 'createPetition'\r\n  })\r\n@graphql(UpdatePetitionMutation, {\r\n\tname: 'updatePetition'\r\n  })\r\nclass PetitionModal extends Component {\r\n\tstate = {\r\n\t\tentity: this.props.entity\r\n\t}\r\n\trender() {\r\n\t\tconst { entity } = this.state;\r\n\t\tconst { onClose } = this.props;\r\n        const modalContent = this.getContent();\r\n\t\treturn <EGModal onClose={onClose} entityType='Petition' entity={entity} modalContent={modalContent} save={this.save}/>;\r\n\t}\r\n\r\n\tsave = () =>{\r\n\t\tconst {onClose, createPetition, updatePetition} = this.props;\r\n        const {entity} = this.state;\r\n        const variables = entity;\r\n        variables.order = parseInt(variables.order);\r\n        // console.log('Saving Entity: ', entity);\r\n        if(entity.id){\r\n            updatePetition({variables}).then(res => {\r\n                onClose();\r\n            });\r\n        } else{\r\n            createPetition({variables}).then(res => {\r\n                onClose();\r\n            });\r\n        }\r\n    }\r\n    \r\n    getContent = () => {\r\n        const { entity } = this.state;\r\n        return [\r\n            <EGTextBox  key={'title-input'}          value={entity.title || ''}             label={'Title'}             onChange={(event) => {this.updateEntity(event, 'title')}} />,\r\n            <EGTextBox  key={'order-input'}          value={entity.order}                   label={'Order'}             onChange={(event) => {this.updateEntity(event, 'order')}} />,\r\n            <EGTextArea key={'short-desc-input'}     value={entity.short_description || ''} label={'Short Description'} onChange={(event) => {this.updateEntity(event, 'short_description')}} />, \r\n            <EGQuill key={'body-input'}              value={entity.body || ''}              label={'Body'}              onChange={(event) => { this.updateEntity(event, 'body')}} />,\r\n            <EGTextBox  key={'primary-image-input'}  value={entity.primary_image || ''}     label={'Primary Image'}     onChange={(event) => {this.updateEntity(event, 'primary_image')}} />,\r\n            <EGTextBox  key={'video-input'}          value={entity.video_url || ''}             label={'Video'}             onChange={(event) => {this.updateEntity(event, 'video_url')}} />,\r\n            <EGTextBox  key={'external-url-input'}   value={entity.external_url || ''}      label={'External URL'}      onChange={(event) => {this.updateEntity(event, 'external_url')}} />,\r\n            <EGCheckbox key={'active-input'}         value={entity.active}                  label={'Active'}            onChange={(event) => {this.updateEntityBoolean(event, 'active')}} />,\r\n            <div key='users'><strong style={{marginRight: '5px'}}>Users:</strong>{entity.users ? entity.users.map(user => {return user.name}).join(', ') : []}</div>,\r\n            <div key='author'><strong style={{marginRight: '5px'}}>Author:</strong>{entity.author.name || ''}</div>,\r\n            <div key='created-at'><strong style={{marginRight: '5px'}}>Created At:</strong>{`${lib.formatTime(entity.createdAt)}`}</div>,\r\n            <div key='updated-at'><strong style={{marginRight: '5px'}}>Updated At:</strong>{`${lib.formatTime(entity.updatedAt)}`}</div>\r\n        ];\r\n    }\r\n\r\n    updateEntity = (event, propName) => {\r\n        const { entity } = this.state;\r\n        if (event.target.value !== entity[propName]) {\r\n            let newEntity = Object.assign({}, entity);\r\n            newEntity[propName] = event.target.value;\r\n            this.setState({ entity: newEntity });\r\n        }\r\n    }\r\n\r\n    updateEntityBoolean = (event, propName) => {\r\n        const { entity } = this.state;\r\n        let newEntity = Object.assign({}, entity);\r\n\t\tnewEntity[propName] = !newEntity[propName];\r\n\t\tthis.setState({ entity: newEntity });\r\n    }\r\n}\r\n\r\nexport default PetitionModal;","import gql from 'graphql-tag';\r\n\r\nexport const GET_ALL_PETITIONS = gql`\r\n  {\r\n    petitions{\r\n      id\r\n      title\r\n      active\r\n      short_description\r\n      body\r\n      order\r\n      primary_image\r\n      video_url\r\n      external_url\r\n      users{\r\n          name\r\n      }\r\n      author{\r\n          id\r\n          name\r\n      }\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Segment, } from 'semantic-ui-react';\r\nimport ManagementView from '../shared/ManagementView';\r\nimport { maxWidthMediaQuery } from '../../constants/responsive';\r\nimport EGTable from '../shared/Table';\r\nimport {lib} from '../../lib/Lib';\r\nimport PetitionModal from './PetitionModal';\r\nimport graphql from '../../hoc/graphql';\r\nimport { GET_ALL_PETITIONS } from '../../graphql/queries/allPetitions';\r\n\r\nconst petition = {\r\n\tid: '',\r\n\torder: '',\r\n\ttitle: '',\r\n\tactive: false,\r\n\tshort_description: '',\r\n\tbody: '',\r\n\tprimary_image: '',\r\n\tvideo_url: '',\r\n\texternal_url: '',\r\n\tusers: [],\r\n\tauthor: {\r\n\t\tname: ''\r\n\t},\r\n\tcreatedAt: '',\r\n\tupdatedAt: ''\r\n}\r\n\r\n@withRouter\r\n@graphql(GET_ALL_PETITIONS, {\r\n\tname:\"all_petitions\"\r\n})\r\nclass Petitions extends Component {\r\n  state = {\r\n    modal: null,\r\n    modalOpen: false,\r\n    entity: petition\r\n  };\r\n\r\n  \trender() {\r\n\t\tconst { all_petitions } = this.props;\r\n\t\tif(all_petitions.loading){\r\n\t\t\treturn <Segment loading style={{height:'100vh', width:'100vw'}}></Segment>\r\n\t\t}\r\n\t\t// console.log('data inside of table', all_petitions.petitions);\r\n\t\treturn [\r\n\t\t<ManagementView\r\n\t\t\tkey='petitions-management-view'\r\n\t\t\ttitle='Petitions'\r\n\t\t\tentityType='Petition'\r\n\t\t\topenModal={() => {\r\n\t\t\tthis.setState({ modalOpen: true });\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<EGTable\r\n\t\t\theadings={[\r\n\t\t\t\t'Title',\r\n\t\t\t\t'Order',\r\n\t\t\t\t'Active',\r\n\t\t\t\t'Short Description',\r\n\t\t\t\t'Author',\r\n\t\t\t\t'Created At',\r\n\t\t\t\t'Updated At'\r\n\t\t\t]}\r\n\t\t\tdata={all_petitions.petitions.map(data => {\r\n\t\t\t\treturn {\r\n\t\t\t\tId: data.id,\r\n\t\t\t\tOrder: data.order,\r\n\t\t\t\tTitle: data.title,\r\n\t\t\t\tActive: data.active,\r\n\t\t\t\tShortDescription: data.short_description,\r\n\t\t\t\tBody: data.body,\r\n\t\t\t\tPrimaryImage: data.primary_image,\r\n\t\t\t\tVideoURL: data.video_url,\r\n\t\t\t\tExternalURL: data.external_url,\r\n\t\t\t\tUsers: data.users,\r\n\t\t\t\tAuthor: data.author.name,\r\n\t\t\t\tCreatedAt: new Date(data.createdAt),\r\n\t\t\t\tUpdatedAt: new Date(data.updatedAt)\r\n\t\t\t\t};\r\n\t\t\t})}\r\n\t\t\tleftAlignColumns={[0, 1, 2, 3, 4, 5, 6]}\r\n\t\t\thyperlinkColumns={[0]}\r\n\t\t\thyperlinkFunctions={[\r\n\t\t\t\t{\r\n\t\t\t\t\tindex: 0,\r\n\t\t\t\t\tfn: data => {this.openModal(all_petitions.petitions.filter(item => {return item.id === data.Id;})[0]);}\r\n\t\t\t\t}\r\n\t\t\t]}\r\n\t\t\tformatColumns={[5, 6]}\r\n\t\t\tformatFunctions={[\r\n\t\t\t\t{\r\n\t\t\t\tindex: 5,\r\n\t\t\t\tfn: value => {\r\n\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\tindex: 6,\r\n\t\t\t\tfn: value => {\r\n\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]}\r\n\t\t\t/>\r\n\t\t</ManagementView>,\r\n\t\tthis._renderModal()\r\n\t\t];\r\n  }\r\n\r\n  openModal = entity => {\r\n    this.setState({ entity: entity, modalOpen: true });\r\n  };\r\n\r\n  _renderModal() {\r\n    const { entity, modalOpen } = this.state;\r\n\tconst { user, all_petitions } = this.props;\r\n    if (!modalOpen) {\r\n      return null;\r\n    }\r\n\t\r\n\tentity.author_id = entity.author.name ? entity.author.name : user.me.id;\r\n\tentity.order = entity.order !== undefined && entity.order !== '' ? entity.order : all_petitions.petitions.length + 1;\r\n\treturn <PetitionModal key='petitions-modal' entity={entity} onClose={this._onCloseModal} />\r\n  }\r\n\r\n  _onCloseModal = () => {\r\n    this.props.all_petitions.refetch();\r\n    this.setState({ modalOpen: null, entity: petition });\r\n  };\r\n}\r\n\r\nexport default Petitions;","import gql from \"../../../node_modules/graphql-tag\";\r\n\r\nexport const CreateUserMutation = gql`\r\n\tmutation CreateUser(\r\n\t\t$username: String\r\n\t\t$email: String\r\n\t\t$password: String!\r\n\t\t$name: String!\r\n\t\t$phone: String\r\n\t\t$role_id: ID!\r\n\t) {\r\n\t\tcreateUser(\r\n\t\t\tdata: { \r\n\t\t\t\tusername: $username\r\n\t\t\t\temail: $email\r\n\t\t\t\tpassword: $password\r\n\t\t\t\tname: $name\r\n\t\t\t\tphone: $phone\r\n\t\t\t\trole: {\r\n\t\t\t\t\tconnect: {\r\n\t\t\t\t\t\tid: $role_id\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t) {\r\n\t\t\tid\r\n\t\t\temail\r\n\t\t}\r\n\t}\r\n`;\r\n","import gql from '../../../node_modules/graphql-tag';\r\n\r\nexport const UpdateUserMutation = gql`\r\n    mutation UpdateUser(\r\n        $id: ID!\r\n        $username: String\r\n\t\t$email: String\r\n\t\t$password: String!\r\n\t\t$name: String!\r\n\t\t$phone: String\r\n\t\t$role_id: ID!\r\n      ) {\r\n    updateUser(where: {\r\n        id: $id\r\n    },\r\n        data: {\r\n            username: $username\r\n\t\t\t\temail: $email\r\n\t\t\t\tpassword: $password\r\n\t\t\t\tname: $name\r\n\t\t\t\tphone: $phone\r\n\t\t\t\trole: {\r\n\t\t\t\t\tconnect: {\r\n\t\t\t\t\t\tid: $role_id\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n    }) {\r\n        id\r\n        email\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\n// import { ADD_GROUP_MUTATION } from '../../../graphql/mutations/add_group';\r\nimport graphql from \"../../hoc/graphql\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { lib }from '../../lib/Lib';\r\nimport EGModal from \"../shared/Modals/Modal\";\r\nimport EGTextBox from '../shared/Inputs/EGTextBox';\r\nimport EGDropdown from '../shared/Inputs/EGDropdown';\r\nimport { CreateUserMutation } from '../../graphql/mutations/createUser_mutation';\r\nimport { UpdateUserMutation } from '../../graphql/mutations/updateUser_mutation';\r\n\r\n@graphql(CreateUserMutation, {\r\n\tname: 'createUser'\r\n  })\r\n@graphql(UpdateUserMutation, {\r\n\tname: 'updateUser'\r\n  })\r\nclass UserModal extends Component {\r\n\tstate = {\r\n        entity: this.props.entity\r\n\t}\r\n\trender() {\r\n\t\tconst { entity } = this.state;\r\n\t\tconst { onClose } = this.props;\r\n        const modalContent = this.getContent();\r\n\t\treturn <EGModal onClose={onClose} entityType='User' entity={entity} modalContent={modalContent} save={this.save}/>;\r\n\t}\r\n\r\n\tsave = () =>{\r\n\t\tconst {onClose, createUser, updateUser, roles} = this.props;\r\n        const {entity} = this.state;\r\n        const variables = entity;\r\n        \r\n        variables.role_id = variables.role ? variables.role.id : roles[0].id;\r\n        // console.log('Saving Entity: ', entity);\r\n        if(entity.id){\r\n            updateUser({variables}).then(res => {\r\n                onClose();\r\n            });\r\n        } else{\r\n            createUser({variables}).then(res => {\r\n                onClose();\r\n            });\r\n        }\r\n\r\n    }\r\n    \r\n    getContent = () => {\r\n        const { entity } = this.state;\r\n        const { roles } = this.props;\r\n        return [\r\n            <EGTextBox key={'email-input'} value={entity.email || ''} label={'Email'} onChange={(event) => {this.updateEntity(event, 'email')}} />,\r\n            <EGTextBox key={'password-input'} value={entity.password || ''} label={'Password'} onChange={(event) => {this.updateEntity(event, 'password')}} />,\r\n            <EGTextBox key={'name-input'} value={entity.name || ''} label={'Name'} onChange={(event) => {this.updateEntity(event, 'name')}} />,\r\n            <EGTextBox key={'phone-input'} value={entity.phone || ''} label={'Phone'} onChange={(event) => {this.updateEntity(event, 'phone')}} />,\r\n            <EGDropdown key={'role-input'} currentValues={entity.role ? entity.role.id : roles[0].id} options={this.toDropdownOptions(roles, 'role_name')} label={'Role'} onChange={(event) => {this.updateRole(event)}} />,\r\n            // <div key='recent-actions'><strong style={{marginRight: '5px'}}>Recent Actions:</strong>{entity.recent_actions ? entity.recent_actions.map(action => { return lib.truncateText(action.action.short_description, 50)}).join(', ') : []}</div>,\r\n            // <div key='petitions-signed'><strong style={{marginRight: '5px'}}>Petitions Signed:</strong>{entity.petitions_signed ? entity.petitions_signed.map(petition => {return petition.title}).join(', ') : []}</div>,\r\n            <div key='total-points'><strong style={{marginRight: '5px'}}>Total Points:</strong>{`${entity.total_points || 0}`}</div>,\r\n            <div key='created-at'><strong style={{marginRight: '5px'}}>Created At:</strong>{`${lib.formatTime(entity.createdAt)}`}</div>,\r\n            <div key='updated-at'><strong style={{marginRight: '5px'}}>Updated At:</strong>{`${lib.formatTime(entity.updatedAt)}`}</div>\r\n        ]\r\n\r\n    }\r\n\r\n    updateEntity = (event, propName) => {\r\n        const { entity } = this.state;\r\n        if (event.target.value !== entity[propName]) {\r\n                let newEntity = Object.assign({}, entity);\r\n            if(propName === 'role.role_name'){\r\n                newEntity.role.role_name = event.target.value;\r\n            } else{\r\n                newEntity[propName] = event.target.value;\r\n            }\r\n            this.setState({ entity: newEntity });\r\n        }\r\n    }\r\n\r\n    toDropdownOptions = (list, textProp) =>  {\r\n        return list.map(item => {\r\n            return {\r\n                key: item.id,\r\n                value: item.id,\r\n                text: item[textProp]\r\n            }\r\n        }) || [];\r\n    }\r\n\r\n    updateRole = (event) => {\r\n        const { entity } = this.state;\r\n        const { roles } = this.props;\r\n        if (event.action && event.value) {\r\n            let newEntity = Object.assign({}, entity);\r\n            newEntity.role = roles.filter(role => {return role.id === event.value})[0];\r\n        this.setState({ entity: newEntity });\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserModal;","import gql from 'graphql-tag';\r\n\r\nexport const GET_ALL_USERS = gql`\r\n  {\r\n    users {\r\n      id\r\n      name\r\n      password\r\n      phone\r\n      username\r\n      email\r\n      total_points\r\n      createdAt\r\n      updatedAt\r\n      role {\r\n        id\r\n        role_name\r\n      }\r\n    }\r\n  }\r\n`;","import gql from \"graphql-tag\";\r\n\r\nexport const GET_ALL_ROLES = gql`\r\n\t{\r\n\t\troles {\r\n\t\t\tid\r\n\t\t\trole_name\r\n\t\t}\r\n\t}\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ManagementView from '../shared/ManagementView';\r\nimport { maxWidthMediaQuery } from '../../constants/responsive';\r\nimport EGTable from '../shared/Table';\r\nimport {lib} from '../../lib/Lib';\r\nimport graphql from '../../hoc/graphql';\r\nimport UserModal from './UserModal';\r\nimport { GET_ALL_USERS } from '../../graphql/queries/allUsers';\r\nimport { GET_ALL_ROLES } from '../../graphql/queries/allRoles';\r\nimport {Segment } from 'semantic-ui-react';\r\n\r\nconst user = {\r\n\tid: '',\r\n\temail: '',\r\n\tpassword: '',\r\n\tname: '',\r\n\tphone: '',\r\n\trecent_actions: [\r\n\t\t{\r\n\t\t\taction: {\r\n\t\t\t\ttitle: '',\r\n\t\t\t},\t\r\n\t\t}\r\n\t],\r\n\ttotal_points: 0,\r\n\tpetitions_signed: [\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t}\r\n\t],\r\n\tcreatedAt: '',\r\n\tupdatedAt: ''\r\n}\r\n\r\n@graphql(GET_ALL_USERS,{\r\n\tname:'all_users'\r\n})\r\n@graphql(GET_ALL_ROLES,{\r\n\tname:'all_roles'\r\n})\r\n@withRouter\r\nclass Users extends Component {\r\n  state = {\r\n    modal: null,\r\n    modalOpen: false,\r\n    entity: user\r\n  };\r\n\r\n  render() {\r\n\tconst { all_users, all_roles } = this.props;\r\n\tif(all_users.loading){\r\n\t\t// console.log('users and roles are loading');\r\n\t\treturn <Segment loading style={{height:'100vh', width:\"100vw\"}}></Segment>\r\n\t} else{\r\n\t\t// console.log('all_roles', all_roles.roles);\r\n\t\t// console.log('all_users', all_users.users);\r\n\t}\r\n    return [\r\n      \t<ManagementView\r\n\t\t\tkey='users-management-view'\r\n\t\t\ttitle='Users'\r\n\t\t\tentityType='User'\r\n\t\t\topenModal={() => {this.setState({modalOpen: true})}}\r\n      \t>\r\n\t\t\t<EGTable\r\n\t\t\t\theadings={[\r\n\t\t\t\t\t'Email',\r\n\t\t\t\t\t'Name',\r\n\t\t\t\t\t'Phone',\r\n\t\t\t\t\t'Role',\r\n\t\t\t\t\t'Created At',\r\n\t\t\t\t\t'Updated At'\r\n\t\t\t\t]}\r\n\t\t\t\tdata={all_users.users.map(data => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tId: data.id,\r\n\t\t\t\t\t\tEmail: data.email,\r\n\t\t\t\t\t\tPassword: data.password,\r\n\t\t\t\t\t\tName: data.name,\r\n\t\t\t\t\t\tPhone: data.phone,\r\n\t\t\t\t\t\tRole: data.role ? data.role.role_name : null,\r\n\t\t\t\t\t\tRecentActions: data.recent_actions,\r\n\t\t\t\t\t\tTotalPoints: data.total_points,\r\n\t\t\t\t\t\tPetitionsSigned: data.petitions_signed ? data.petitions_signed.map(petition => {return petition.title}).join(', ') : null,\r\n\t\t\t\t\t\tCreatedAt: new Date(data.createdAt),\r\n\t\t\t\t\t\tUpdatedAt: new Date(data.updatedAt)\r\n\t\t\t\t\t};\r\n\t\t\t\t})}\r\n\t\t\t\tleftAlignColumns={[0, 1, 2, 3, 4, 5]}\r\n\t\t\t\thyperlinkColumns={[0]}\r\n\t\t\t\thyperlinkFunctions={[{ index: 0, fn: (data) => {this.openModal(all_users.users.filter(user => { return user.id === data.Id})[0])} }]}\r\n\t\t\t\tformatColumns={[4, 5]}\r\n\t\t\t\tformatFunctions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex: 4,\r\n\t\t\t\t\t\tfn: value => {\r\n\t\t\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex: 5,\r\n\t\t\t\t\t\tfn: value => {\r\n\t\t\t\t\t\t\treturn lib.formatTime(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t  </ManagementView>,\r\n\t  this._renderModal()\r\n\t\t];\r\n  \t}\r\n\r\n\topenModal = (entity) => {\r\n\t\tthis.setState({entity: entity, modalOpen: true})\r\n\t}\r\n\r\n  \t_renderModal() {\r\n\t\tconst { entity, modalOpen } = this.state;\r\n\t\tif (!modalOpen) { return null; }\r\n\r\n\t\tconst { all_roles } = this.props;\r\n\t\treturn <UserModal key='user-modal' entity={entity} onClose={this._onCloseModal} roles={all_roles.roles}/>;\r\n  \t}\r\n\r\n  _onCloseModal = () => {\r\n    this.props.all_users.refetch();\r\n    this.setState({ modalOpen: null, entity: user });\r\n  };\r\n}\r\n\r\nexport default Users;","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n// import { Navigation } from '../components/NavigationComponent/index';\r\nimport withUser from \"../hoc/withUser\";\r\nimport PageNotFound from \"../components/404\";\r\nimport Login from \"../components/LoginComponent\";\r\nimport Home from \"../components/HomeComponent\";\r\nimport NavBar from \"../components/NavigationComponent\";\r\nimport Actions from \"../components/ActionsComponent\";\r\nimport Petitions from \"../components/PetitionsComponent\";\r\nimport Users from \"../components/UsersComponent\";\r\n// import Settings from '../components/SettingsComponent';\r\n\r\n// @withUser()\r\n// @withRouter\r\n\r\nconst MainLayout = (props, { routes }) => {\r\n    if (!props.user.loading && !props.user.me) {\r\n      return <Redirect to={{ pathname: '/login', target: props.location }} />;\r\n    }\r\n  return (\r\n    <div style={{ overflow: 'hidden', height: '100vh', backgroundColor: 'lightgreen' }} className=\"container\">\r\n      <NavBar {...props} />\r\n      <Switch style={{height: '95vh'}}>\r\n        <Route exact path={\"/\"} render={() => <Redirect to=\"/home\" />} />\r\n        <Route exact path={\"/home\"} render={() => <Home {...props} />} />\r\n        <Route exact path={\"/login\"} render={() => <Login {...props} />} />\r\n        <Route exact path={\"/actions\"} render={() => <Actions {...props} />} />\r\n        <Route exact path={\"/games\"} render={() => <Actions {...props} />} />\r\n        <Route exact path={\"/petitions\"} render={() => <Petitions {...props} />} />\r\n        <Route exact path={\"/users\"} render={() => <Users {...props} />} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n};\r\nexport default withUser()(MainLayout);\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nimport { GET_CURRENT_USER_QUERY } from '../graphql/queries/get_current_user';\r\n\r\n// function hasRole(user, roleName) {\r\n//   return user.roles.some(role => role.name === roleName);\r\n// }\r\n\r\n// function isAuthorized(user, auth) {\r\n//   if (user && user.roles.length) {\r\n//     if (isBoolean(auth)) {\r\n//       return auth;\r\n//     }\r\n//     if (isString(auth)) {\r\n//       return hasRole(user, auth);\r\n//     }\r\n//     if (isArray(auth)) {\r\n//       return auth.some(role => hasRole(user, role));\r\n//     }\r\n//   } else {\r\n//     return !auth;\r\n//   }\r\n// }\r\n\r\nexport default function withUser(options = {}) {\r\n  return function componentWrapper(Component) {\r\n    @graphql(GET_CURRENT_USER_QUERY, { name: 'user' })\r\n    @withRouter\r\n    class WithUser extends React.Component {\r\n      static displayName = `withUser(${Component.displayName ||\r\n        Component.name})`;\r\n\r\n      static propTypes = {\r\n        // authenticated: PropTypes.oneOfType([\r\n        //   PropTypes.bool,\r\n        //   PropTypes.oneOf(values(ROLES)),\r\n        //   PropTypes.arrayOf(PropTypes.oneOf(values(ROLES)))\r\n        // ]),\r\n        location: PropTypes.object.isRequired,\r\n        redirect: PropTypes.bool,\r\n        user: PropTypes.shape({\r\n          loading: PropTypes.bool.isRequired,\r\n          user: PropTypes.object\r\n        }).isRequired\r\n      };\r\n\r\n      shouldComponentUpdate(nextProps) {\r\n        // Working around an issue where updating the user record clears the\r\n        // user data before setting with new values and results in a login redirect.\r\n        // Probably a more intelligent way to handle this, will need to research\r\n        if (this.props.user.user && !nextProps.user.user) {\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n      render() {\r\n        const { location, redirect, user } = this.props;\r\n        if (user.user !== undefined) {\r\n          if (user.loading) {\r\n            return null;\r\n          }\r\n\r\n          if (redirect === false) {\r\n            return null;\r\n          }\r\n\r\n          const path = user.user ? 'home' : 'login';\r\n\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: `/${path}`,\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return <Component {...this.props} />;\r\n      }\r\n    }\r\n\r\n    return WithUser;\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport LoginLayout from '../layout/loginLayout';\r\nimport MainLayout from '../layout/mainLayout';\r\n\r\nimport Login from '../components/LoginComponent';\r\n// import Dashboard from '../components/DashboardComponent';\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path={'/login'} component={LoginLayout} />\r\n            <Route path={'/'} component={MainLayout} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Routes from './routes/main';\r\nclass App extends Component {\r\n  render() {\r\n    return <Routes />\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'semantic-ui-css/semantic.min.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './assets/line-awesome/css/line-awesome-semantic-font-awesome.css';\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport client from './Apollo';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nrequire('dotenv').config('../../.env');\r\n\r\nlet Application = (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n\r\nReactDOM.render(Application, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}